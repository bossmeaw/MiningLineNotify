<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WmiLight</name>
    </assembly>
    <members>
        <member name="T:WmiLight.AuthenticationProtocol">
            <summary>
            Specify different authentication modes.
            </summary>
        </member>
        <member name="F:WmiLight.AuthenticationProtocol.NTLM">
            <summary>
            Authentication over the NTLM protocol.
            </summary>
        </member>
        <member name="F:WmiLight.AuthenticationProtocol.Kerberos">
            <summary>
            Authentication over the Kerberos protocol.
            </summary>
        </member>
        <member name="T:WmiLight.DebuggerFakeField">
            <summary>
            Class to fake fields into the debugger view.
            </summary>
        </member>
        <member name="F:WmiLight.DebuggerFakeField.name">
            <summary>
            The name of the field.
            </summary>
        </member>
        <member name="F:WmiLight.DebuggerFakeField.value">
            <summary>
            The value ob the field.
            </summary>
        </member>
        <member name="M:WmiLight.DebuggerFakeField.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:WmiLight.DebuggerFakeField"/> class.
            </summary>
            <param name="name">The name of the field.</param>
            <param name="value">The value ob the field.</param>
        </member>
        <member name="T:WmiLight.ExceptionAttribute">
            <summary>
            Attribute to declare an exception for a value of an <see cref="T:WmiLight.HResult"/> enum.
            </summary>
        </member>
        <member name="F:WmiLight.ExceptionAttribute.exceptionType">
            <summary>
            The type of the exception.
            </summary>
        </member>
        <member name="F:WmiLight.ExceptionAttribute.exceptionMessage">
            <summary>
            The message of the exception.
            </summary>
        </member>
        <member name="M:WmiLight.ExceptionAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WmiLight.ExceptionAttribute"/> class.
            </summary>
        </member>
        <member name="M:WmiLight.ExceptionAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:WmiLight.ExceptionAttribute"/> class.
            </summary>
            <param name="exceptionType">The type of the exception.</param>
        </member>
        <member name="M:WmiLight.ExceptionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WmiLight.ExceptionAttribute"/> class.
            </summary>
            <param name="exceptionMessage">The message of the exception.</param>
        </member>
        <member name="M:WmiLight.ExceptionAttribute.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:WmiLight.ExceptionAttribute"/> class.
            </summary>
            <param name="exceptionMessage">The message of the exception.</param>
            <param name="exceptionType">The type of the exception.</param>
        </member>
        <member name="P:WmiLight.ExceptionAttribute.ExceptionType">
            <summary>
            Gets the type of the exception.
            </summary>
        </member>
        <member name="P:WmiLight.ExceptionAttribute.ExceptionMessage">
            <summary>
            Gets the message of the exception.
            </summary>
        </member>
        <member name="T:WmiLight.HResult">
            <summary>
            The <see cref="T:WmiLight.HResult"/> data type is a 32-bit value is used to describe an error or warning.
            </summary>
            <remarks>
                                                                                                                                                                                                        <para />  
             The HRESULT numbering space has the following internal structure. 
             Any protocol that uses NTSTATUS values on the wire is responsible for stating the order in which the bytes are placed on the wire.
                                  1                   2                   3
              0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
             +-+-+-+-+-+---------------------+-------------------------------+
             |S|R|C|N|r|    Facility         |               Code            |
             +-+-+-+-+-+---------------------+-------------------------------+
                                                                                                                                                                                                         <para />                                                                                                                         
             S (1 bit): Severity. If set, indicates a failure result. If clear, indicates a success result.
             R (1 bit): Reserved. If the N bit is clear, this bit MUST be set to 0. If the N bit is set, this bit is defined by the NTSTATUS numbering space.
             C (1 bit): Customer. This bit specifies if the value is customer-defined or Microsoft-defined. The bit is set for customer-defined values and clear for Microsoft-defined values.
             N (1 bit): If set, indicates that the error code is an NTSTATUS value (as specified at http://msdn.microsoft.com/en-us/library/cc231200.aspx), except that this bit is set.
             r (1 bit): Reserved. SHOULD be set to 0.
                                                                                                                                                                                                         <para />      
                 +-----------------------------------------------------------+
                 |   The following HRESULT codes have the X bit set to 1:    |
                 +-----------------------------------------------------------+
                 |   Name                               | Value              |
                 +-----------------------------------------------------------+
                 |   TRK_S_OUT_OF_SYNC                  | 0x0DEAD100         |
                 |   TRK_VOLUME_NOT_FOUND               | 0x0DEAD102         |
                 |   TRK_VOLUME_NOT_OWNED               | 0x0DEAD103         |
                 |   TRK_S_NOTIFICATION_QUOTA_EXCEEDED  | 0x0DEAD107         |
                 |   TRK_E_NOT_FOUND                    | 0x8DEAD01B         |
                 |   TRK_E_VOLUME_QUOTA_EXCEEDED        | 0x8DEAD01C         |
                 |   TRK_SERVER_TOO_BUSY                | 0x8DEAD01E         |
                 +-----------------------------------------------------------+   
                                                                                                                                                                                                         <para />  
             Facility (11 bits): An indicator of the source of the error. New facilities are occasionally added by Microsoft.
                                                                                                                                                                                                         <para />  
                 +--------------------------------------------------------------------------------------------------------------------------------------+
                 |   The following table lists the currently defined facility codes:                                                                    |
                 +--------------------------------------------------------------------------------------------------------------------------------------+
                 |   Name                               | Value      | Meaning                                                                          |
                 +--------------------------------------------------------------------------------------------------------------------------------------+
                 |   FACILITY_NULL                      |  1         | The default facility code.                                                       |
                 |   FACILITY_RPC                       |  2         | The source of the error code is an RPC subsystem.                                |
                 |   FACILITY_DISPATCH                  |  3         | The source of the error code is a COM Dispatch.                                  |
                 |   FACILITY_STORAGE                   |  4         | The source of the error code is OLE Storage.                                     |
                 |   FACILITY_ITF                       |  5         | The source of the error code is COM/OLE Interface management.                    |
                 |   FACILITY_WIN32                     |  6         | This region is reserved to map undecorated error codes into HRESULTs.            |
                 |   FACILITY_WINDOWS                   |  7         | The source of the error code is the Windows subsystem.                           |
                 |   FACILITY_SECURITY                  |  8         | The source of the error code is the Security API layer.                          |
                 |   FACILITY_SSPI                      |  9         | The source of the error code is the Security API layer.                          |
                 |   FACILITY_CONTROL                   | 10         | The source of the error code is the control mechanism.                           |
                 |   FACILITY_CERT                      | 11         | The source of the error code is a certificate client or server?                  |
                 |   FACILITY_INTERNET                  | 12         | The source of the error code is Wininet related.                                 |
                 |   FACILITY_MEDIASERVER               | 13         | The source of the error code is the Windows Media Server.                        |
                 |   FACILITY_MSMQ                      | 14         | The source of the error code is the Microsoft Message Queue.                     |
                 |   FACILITY_SETUPAPI                  | 15         | The source of the error code is the Setup API.                                   |
                 |   FACILITY_SCARD                     | 16         | The source of the error code is the Smart-card subsystem.                        |
                 |   FACILITY_COMPLUS                   | 17         | The source of the error code is COM+.                                            |
                 |   FACILITY_AAF                       | 18         | The source of the error code is the Microsoft agent.                             |
                 |   FACILITY_URT                       | 19         | The source of the error code is .NET CLR.                                        |
                 |   FACILITY_ACS                       | 20         | The source of the error code is the audit collection service.                    |
                 |   FACILITY_DPLAY                     | 21         | The source of the error code is Direct Play.                                     |
                 |   FACILITY_UMI                       | 22         | The source of the error code is the ubiquitous memoryintrospection service.      |
                 |   FACILITY_SXS                       | 23         | The source of the error code is Side-by-side servicing.                          |
                 |   FACILITY_WINDOWS_CE                | 24         | The error code is specific to Windows CE.                                        |
                 |   FACILITY_HTTP                      | 25         | The source of the error code is HTTP support.                                    |
                 |   FACILITY_USERMODE_COMMONLOG        | 26         | The source of the error code is common Logging support.                          |
                 |   FACILITY_USERMODE_FILTER_MANAGER   | 31         | The source of the error code is the user mode filter manager.                    |
                 |   FACILITY_BACKGROUNDCOPY            | 32         | The source of the error code is background copy control.                         |
                 |   FACILITY_CONFIGURATION             | 33         | The source of the error code is configuration services.                          |
                 |   FACILITY_STATE_MANAGEMENT          | 34         | The source of the error code is state management services.                       |
                 |   FACILITY_METADIRECTORY             | 35         | The source of the error code is the Microsoft Identity Server.                   |
                 |   FACILITY_WINDOWSUPDATE             | 36         | The source of the error code is a Windows update.                                |
                 |   FACILITY_DIRECTORYSERVICE          | 37         | The source of the error code is Active Directory.                                |
                 |   FACILITY_GRAPHICS                  | 38         | The source of the error code is the graphics drivers.                            |
                 |   FACILITY_SHELL                     | 39         | The source of the error code is the user Shell.                                  |
                 |   FACILITY_TPM_SERVICES              | 40         | The source of the error code is the Trusted Platform Module services.            |
                 |   FACILITY_TPM_SOFTWARE              | 41         | The source of the error code is the Trusted Platform Module applications.        |
                 |   FACILITY_PLA                       | 48         | The source of the error code is Performance Logs and Alerts.                     |
                 |   FACILITY_FVE                       | 49         | The source of the error code is Full volume encryption.                          |
                 |   FACILITY_FWP                       | 50         | The source of the error code is the Firewall Platform.                           |
                 |   FACILITY_WINRM                     | 51         | The source of the error code is the Windows Resource Manager.                    |
                 |   FACILITY_NDIS                      | 52         | The source of the error code is the Network Driver Interface.                    |
                 |   FACILITY_USERMODE_HYPERVISOR       | 53         | The source of the error code is the Usermode Hypervisor components.              |
                 |   FACILITY_CMI                       | 54         | The source of the error code is the Configuration Management Infrastructure.     |
                 |   FACILITY_USERMODE_VIRTUALIZATION   | 55         | The source of the error code is the user mode virtualization subsystem.          |
                 |   FACILITY_USERMODE_VOLMGR           | 56         | The source of the error code is the user mode volume manager.                    |
                 |   FACILITY_BCD                       | 57         | The source of the error code is the Boot Configuration Database.                 |
                 |   FACILITY_USERMODE_VHD              | 58         | The source of the error code is user mode virtual hard disk support.             |
                 |   FACILITY_SDIAG                     | 60         | The source of the error code is System Diagnostics.                              |
                 |   FACILITY_WEBSERVICES               | 61         | The source of the error code is the Web Services.                                |
                 |   FACILITY_WINDOWS_DEFENDER          | 80         | The source of the error code is a Windows Defender component.                    |
                 |   FACILITY_OPC                       | 81         | The source of the error code is the open connectivity service.                   |
                 +--------------------------------------------------------------------------------------------------------------------------------------+
                                                                                                                                                                                                         <para />  
             Code (2 bytes): The remainder of the error code.
                                                                                                                                                                                                         <para />  
             <see url="http://msdn.microsoft.com/en-us/library/cc231198.aspx"/>
            </remarks>
        </member>
        <member name="F:WmiLight.HResult.MapLockObj">
            <summary>
            The lock object to sync parallel access to the <see cref="F:WmiLight.HResult.map"/> field.
            </summary>
        </member>
        <member name="F:WmiLight.HResult.map">
            <summary>
            The Exception-Map.
            </summary>
        </member>
        <member name="F:WmiLight.HResult.value">
            <summary>
            The value ob the <see cref="T:WmiLight.HResult"/> as <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="M:WmiLight.HResult.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WmiLight.HResult"/> struct.
            </summary>
            <param name="intValue">The value ob the <see cref="T:WmiLight.HResult"/> as <see cref="T:System.Int32"/>.</param>
        </member>
        <member name="P:WmiLight.HResult.Failed">
            <summary>
            Gets a value indicating whether the <see cref="T:WmiLight.HResult"/> is an error.
            </summary>
        </member>
        <member name="P:WmiLight.HResult.Map">
            <summary>
            Gets the exception map.
            </summary>
        </member>
        <member name="M:WmiLight.HResult.op_Implicit(WmiLight.HResult)~System.Exception">
            <summary>
            Explicit conversion from <see cref="T:WmiLight.HResult"/> to <see cref="T:System.Exception"/>.
            </summary>
            <param name="hr">The <see cref="T:WmiLight.HResult"/> value to convert to <see cref="T:System.Exception"/>.</param>
            <returns>The <see cref="T:System.Exception"/> for the <see cref="T:WmiLight.HResult"/>.</returns>
        </member>
        <member name="M:WmiLight.HResult.op_Implicit(WmiLight.HResult)~System.Int32">
            <summary>
            Explicit conversion from <see cref="T:WmiLight.HResult"/> to <see cref="T:System.Int32"/>.
            </summary>
            <param name="hr">The <see cref="T:WmiLight.HResult"/> value to convert to <see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Int32"/> value for the <see cref="T:WmiLight.HResult"/>.</returns>
        </member>
        <member name="M:WmiLight.HResult.op_Implicit(System.Enum)~WmiLight.HResult">
            <summary>
            Explicit conversion from <see cref="T:System.Enum"/> to <see cref="T:WmiLight.HResult"/>.
            </summary>
            <param name="enum">The <see cref="T:System.Enum"/> value to convert to <see cref="T:WmiLight.HResult"/>.</param>
            <returns>The <see cref="T:WmiLight.HResult"/> for the <see cref="T:System.Enum"/>.</returns>
        </member>
        <member name="M:WmiLight.HResult.op_Implicit(System.Int32)~WmiLight.HResult">
            <summary>
            Explicit conversion from <see cref="T:System.Int32"/> to <see cref="T:WmiLight.HResult"/>.
            </summary>
            <param name="intValue">The <see cref="T:System.Int32"/> value to convert to <see cref="T:WmiLight.HResult"/>.</param>
            <returns>The <see cref="T:System.Int32"/> value as <see cref="T:WmiLight.HResult"/>.</returns>
        </member>
        <member name="M:WmiLight.HResult.op_Equality(WmiLight.HResult,WmiLight.HResult)">
            <summary>
            Determines whether the specified <see cref="T:WmiLight.HResult"/> is equal to the other <see cref="T:WmiLight.HResult"/>.
            </summary>
            <param name="x">The one <see cref="T:WmiLight.HResult"/> to compare.</param>
            <param name="y">The other <see cref="T:WmiLight.HResult"/> to compare.</param>
            <returns>true if the specified <see cref="T:WmiLight.HResult"/> is equal to the other <see cref="T:WmiLight.HResult"/>; otherwise, false.</returns>
        </member>
        <member name="M:WmiLight.HResult.op_Inequality(WmiLight.HResult,WmiLight.HResult)">
            <summary>
            Determines whether the specified <see cref="T:WmiLight.HResult"/> is unequal to the other <see cref="T:WmiLight.HResult"/>.
            </summary>
            <param name="x">The one <see cref="T:WmiLight.HResult"/> to compare.</param>
            <param name="y">The other <see cref="T:WmiLight.HResult"/> to compare.</param>
            <returns>true if the specified <see cref="T:WmiLight.HResult"/> is unequal to the other <see cref="T:WmiLight.HResult"/>; otherwise, false.</returns>
        </member>
        <member name="M:WmiLight.HResult.op_Equality(WmiLight.HResult,System.Enum)">
            <summary>
            Determines whether a <see cref="T:WmiLight.HResult"/> is equal to a <see cref="T:System.Enum"/>.
            </summary>
            <param name="x">The one <see cref="T:WmiLight.HResult"/> to compare.</param>
            <param name="y">The other <see cref="T:System.Enum"/> to compare.</param>
            <returns>true if the <see cref="T:WmiLight.HResult"/> is equal to the <see cref="T:System.Enum"/>; otherwise, false.</returns>
        </member>
        <member name="M:WmiLight.HResult.op_Inequality(WmiLight.HResult,System.Enum)">
            <summary>
            Determines whether a <see cref="T:WmiLight.HResult"/> is unequal to a <see cref="T:System.Enum"/>.
            </summary>
            <param name="x">The <see cref="T:WmiLight.HResult"/> to compare.</param>
            <param name="y">The <see cref="T:System.Enum"/> to compare.</param>
            <returns>true if the <see cref="T:WmiLight.HResult"/> is unequal to the <see cref="T:System.Enum"/>; otherwise, false.</returns>
        </member>
        <member name="M:WmiLight.HResult.GetHashCode">
            <summary>
            Serves as a hash function.
            </summary>
            <returns>A hash code for the current <see cref="T:WmiLight.HResult"/>.</returns>
        </member>
        <member name="M:WmiLight.HResult.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current <see cref="T:WmiLight.HResult"/>.
            </summary>
            <param name="obj">The object to compare with the current <see cref="T:WmiLight.HResult"/>.</param>
            <returns>true if the specified object is equal to the current <see cref="T:WmiLight.HResult"/>; otherwise, false.</returns>
        </member>
        <member name="M:WmiLight.HResult.Equals(WmiLight.HResult)">
            <summary>
            Determines whether the specified <see cref="T:WmiLight.HResult"/> is equal to the current <see cref="T:WmiLight.HResult"/>.
            </summary>
            <param name="hr">The <see cref="T:WmiLight.HResult"/> to compare with the current <see cref="T:WmiLight.HResult"/>.</param>
            <returns>true if the specified <see cref="T:WmiLight.HResult"/> is equal to the current <see cref="T:WmiLight.HResult"/>; otherwise, false.</returns>
        </member>
        <member name="M:WmiLight.HResult.ToString">
            <summary>
            Returns a string that represents the current <see cref="T:WmiLight.HResult"/>.
            </summary>
            <returns>A string that represents the current <see cref="T:WmiLight.HResult"/>.</returns>
        </member>
        <member name="M:WmiLight.HResult.ThrowException">
            <summary>
            throws an exception.
            </summary>
        </member>
        <member name="T:WmiLight.HResultInfo">
            <summary>
            Class with information about a <see cref="P:WmiLight.HResultInfo.HResult"/>.
            </summary>
        </member>
        <member name="F:WmiLight.HResultInfo.errorMessage">
            <summary>
            The error message.
            </summary>
        </member>
        <member name="F:WmiLight.HResultInfo.label">
            <summary>
            The label.
            </summary>
        </member>
        <member name="F:WmiLight.HResultInfo.hresult">
            <summary>
            The associated <see cref="P:WmiLight.HResultInfo.HResult"/>.
            </summary>
        </member>
        <member name="M:WmiLight.HResultInfo.#ctor(WmiLight.HResult,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WmiLight.HResultInfo"/> class.
            </summary>
            <param name="hresult">The associated <see cref="P:WmiLight.HResultInfo.HResult"/>.</param>
            <param name="errorMessage">The error message.</param>
            <param name="label">The label.</param>
        </member>
        <member name="P:WmiLight.HResultInfo.HResult">
            <summary>
            Gets the associated <see cref="P:WmiLight.HResultInfo.HResult"/>.
            </summary>
        </member>
        <member name="P:WmiLight.HResultInfo.ErrorMessage">
            <summary>
            Gets the error message.
            </summary>
        </member>
        <member name="P:WmiLight.HResultInfo.Label">
            <summary>
            Gets the label.
            </summary>
        </member>
        <member name="T:WmiLight.LocalCredentialsException">
            <summary>
            The Exception for the case that the Username, password, or authority are specified for a local <see cref="T:WmiLight.WmiConnection"/>.
            </summary>
        </member>
        <member name="M:WmiLight.LocalCredentialsException.#ctor(WmiLight.HResultInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:WmiLight.LocalCredentialsException"/> class.
            </summary>
            <param name="hresultInfo">The <see cref="T:WmiLight.HResultInfo"/>.</param>
        </member>
        <member name="T:WmiLight.AuthenticationLevel">
            <summary>
            Describes the authentication level to be used to connect to WMI. This is used for the COM connection to WMI.
            </summary>
        </member>
        <member name="F:WmiLight.AuthenticationLevel.Default">
            <summary>
            The default COM authentication level. WMI uses the default Windows Authentication setting.
            </summary>
        </member>
        <member name="F:WmiLight.AuthenticationLevel.None">
            <summary>
            No COM authentication.
            </summary>
        </member>
        <member name="F:WmiLight.AuthenticationLevel.Connect">
            <summary>
            Connect-level COM authentication.
            </summary>
        </member>
        <member name="F:WmiLight.AuthenticationLevel.Call">
            <summary>
            Call-level COM authentication.
            </summary>
        </member>
        <member name="F:WmiLight.AuthenticationLevel.Packet">
            <summary>
            Packet-level COM authentication.
            </summary>
        </member>
        <member name="F:WmiLight.AuthenticationLevel.PacketIntegrity">
            <summary>
            Packet Integrity-level COM authentication.
            </summary>
        </member>
        <member name="F:WmiLight.AuthenticationLevel.PacketPrivacy">
            <summary>
            Packet Privacy-level COM authentication.
            </summary>
        </member>
        <member name="F:WmiLight.AuthenticationLevel.Unchanged">
            <summary>
            The default COM authentication level. WMI uses the default Windows Authentication setting.
            </summary>
        </member>
        <member name="T:WmiLight.InvalidParameterException">
            <summary>
            The exception that is thrown when a specified WMI parameter is invalid.
            </summary>
        </member>
        <member name="M:WmiLight.InvalidParameterException.#ctor(WmiLight.HResultInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:WmiLight.InvalidParameterException"/> class.
            </summary>
            <param name="hresultInfo">The <see cref="T:WmiLight.HResultInfo"/>.</param>
        </member>
        <member name="T:WmiLight.InvalidNamespaceException">
            <summary>
            The exception that is thrown when the specified WMI namespace is invalid.
            </summary>
        </member>
        <member name="M:WmiLight.InvalidNamespaceException.#ctor(WmiLight.HResultInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:WmiLight.InvalidNamespaceException"/> class.
            </summary>
            <param name="hresultInfo">The <see cref="T:WmiLight.HResultInfo"/>.</param>
        </member>
        <member name="M:WmiLight.InvalidNamespaceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WmiLight.InvalidNamespaceException"/> class.
            </summary>
            <param name="path">The invalid namespace.</param>
        </member>
        <member name="P:WmiLight.InvalidNamespaceException.Namespace">
            <summary>
            Gets the invalid namespace.
            </summary>
        </member>
        <member name="T:WmiLight.TransportFailureException">
            <summary>
            The Exception for the case that the Username, password, or authority are specified for a local <see cref="T:WmiLight.WmiConnection"/>.
            </summary>
        </member>
        <member name="M:WmiLight.TransportFailureException.#ctor(WmiLight.HResultInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:WmiLight.TransportFailureException"/> class.
            </summary>
            <param name="hresultInfo">The <see cref="T:WmiLight.HResultInfo"/>.</param>
        </member>
        <member name="T:WmiLight.ImpersonationLevel">
            <summary>
            Describes the impersonation level to be used to connect to WMI.
            </summary>
        </member>
        <member name="F:WmiLight.ImpersonationLevel.Default">
            <summary>
            Default impersonation.
            </summary>
        </member>
        <member name="F:WmiLight.ImpersonationLevel.Anonymous">
            <summary>
            Anonymous COM impersonation level that hides the identity of the caller. Calls to WMI may fail with this impersonation level.
            </summary>
        </member>
        <member name="F:WmiLight.ImpersonationLevel.Identify">
            <summary>
            Identify-level COM impersonation level that allows objects to query the credentials of the caller. Calls to WMI may fail with this impersonation level.
            </summary>
        </member>
        <member name="F:WmiLight.ImpersonationLevel.Impersonate">
            <summary>
            Impersonate-level COM impersonation level that allows objects to use the credentials of the caller. This is the recommended impersonation level for WMI calls.
            </summary>
        </member>
        <member name="F:WmiLight.ImpersonationLevel.Delegate">
            <summary>
            Delegate-level COM impersonation level that allows objects to permit other objects to use the credentials of the caller. 
            This level, which will work with WMI calls but may constitute an unnecessary security risk, is supported only under Windows 2000.
            </summary>
        </member>
        <member name="T:WmiLight.CimType">
            <summary>
            Describes the possible CIM types for properties, qualifiers, or method parameters.
            </summary>
        </member>
        <member name="F:WmiLight.CimType.None">
            <summary>
            Invalid Type.
            </summary>
        </member>
        <member name="F:WmiLight.CimType.SInt16">
            <summary>
            A signed 16-bit integer.
            </summary>
        </member>
        <member name="F:WmiLight.CimType.SInt32">
            <summary>
            A signed 32-bit integer.
            </summary>
        </member>
        <member name="F:WmiLight.CimType.Real32">
            <summary>
            A floating-point 32-bit number.
            </summary>
        </member>
        <member name="F:WmiLight.CimType.Real64">
            <summary>
            A floating point 64-bit number.
            </summary>
        </member>
        <member name="F:WmiLight.CimType.String">
            <summary>
            A string.
            </summary>
        </member>
        <member name="F:WmiLight.CimType.Boolean">
            <summary>
            A boolean.
            </summary>
        </member>
        <member name="F:WmiLight.CimType.Object">
            <summary>
            An embedded object.
            <para />
            Note that embedded objects differ from references in that the embedded object doesn't have a path and its lifetime is identical to the lifetime of the containing object.
            </summary>
        </member>
        <member name="F:WmiLight.CimType.SInt8">
            <summary>
            A signed 8-bit integer.
            </summary>
        </member>
        <member name="F:WmiLight.CimType.UInt8">
            <summary>
            An unsigned 8-bit integer.
            </summary>
        </member>
        <member name="F:WmiLight.CimType.UInt16">
            <summary>
            An unsigned 16-bit integer.
            </summary>
        </member>
        <member name="F:WmiLight.CimType.UInt32">
            <summary>
            An unsigned 32-bit integer.
            </summary>
        </member>
        <member name="F:WmiLight.CimType.SInt64">
            <summary>
            A signed 64-bit integer.
            </summary>
        </member>
        <member name="F:WmiLight.CimType.UInt64">
            <summary>
            An unsigned 64-bit integer.
            </summary>
        </member>
        <member name="F:WmiLight.CimType.DateTime">
            <summary>
            A date or time value, represented in a string in DMTF date/time format: yyyymmddHHMMSS.mmmmmmsUUU
            <para>where:</para>
            <para>yyyymmdd - is the date in year/month/day</para>
            <para>HHMMSS - is the time in hours/minutes/seconds</para>
            <para>mmmmmm - is the number of microseconds in 6 digits</para>
            <para>sUUU - is a sign (+ or -) and a 3-digit UTC offset</para>
            </summary>
        </member>
        <member name="F:WmiLight.CimType.Reference">
            <summary>
            A reference to another object. This is represented by a string containing the path to the referenced object.
            </summary>
        </member>
        <member name="F:WmiLight.CimType.Char16">
            <summary>
            A 16-bit character.
            </summary>
        </member>
        <member name="T:WmiLight.HResultAttribute">
            <summary>
            The attribute to select a enum as stock of <see cref="T:WmiLight.HResult"/>s.
            </summary>
        </member>
        <member name="T:WmiLight.Wbem.WbemConditionFlag">
            <summary>
            Enumeration to specify a condition for the <see cref="M:WmiLight.Wbem.IWbemClassObject.GetNames(System.String,WmiLight.Wbem.WbemConditionFlag,System.Object@,System.String[]@)"/>() method. 
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemConditionFlag.WBEM_FLAG_ALWAYS">
            <summary>
            Return all property names. <para />
            The <see name="IWbemClassObject.GetNames.qualifierName"/> and <see name="IWbemClassObject.GetNames.qualifierValue"/> parameters are not used.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemConditionFlag.WBEM_FLAG_ONLY_IF_TRUE">
            <summary>
            Return only properties that have a qualifier of the name specified by the parameter <see name="IWbemClassObject.GetNames.qualifierName"/>. <para />
            If this flag is used, you must specify <see name="IWbemClassObject.GetNames.qualifierName"/>.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemConditionFlag.WBEM_FLAG_ONLY_IF_FALSE">
            <summary>
            Return only properties that do not have a qualifier of the name specified by the parameter <see name="IWbemClassObject.GetNames.qualifierName"/>. <para />
            If this flag is used, you must specify <see name="IWbemClassObject.GetNames.qualifierName"/>.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemConditionFlag.WBEM_FLAG_ONLY_IF_IDENTICAL">
            <summary>
            Return only properties that have a qualifier of the name specified by the parameter <see name="IWbemClassObject.GetNames.qualifierName"/>, 
            and also have a value identical to the value specified by the <see name="IWbemClassObject.GetNames.qualifierValue"/> parameter. <para />
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemConditionFlag.WBEM_FLAG_KEYS_ONLY">
            <summary>
            Return only property names that are object references.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemConditionFlag.WBEM_FLAG_REFS_ONLY">
            <summary>
            Return only property names that are object references.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemConditionFlag.WBEM_FLAG_LOCAL_ONLY">
            <summary>
            Return only property names that belong to the derived-most class. Exclude properties from the parent class or parent classes.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemConditionFlag.WBEM_FLAG_PROPAGATED_ONLY">
            <summary>
            Return only property names that belong to the parent class or parent classes.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemConditionFlag.WBEM_FLAG_SYSTEM_ONLY">
            <summary>
            Return only system properties.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemConditionFlag.WBEM_FLAG_NONSYSTEM_ONLY">
            <summary>
            Return only property names that are not system properties.
            </summary>
        </member>
        <member name="T:WmiLight.Wbem.IWbemCallResult">
            <summary>
            The <see cref="T:WmiLight.Wbem.IWbemCallResult"/> interface is used for semisynchronous calls of the <see cref="T:WmiLight.Wbem.IWbemServices"/> interface. 
            </summary>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa391425(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemCallResult.GetResultObject(System.Int32,WmiLight.Wbem.IWbemClassObject@)">
            <summary>
            Returns an <see cref="T:WmiLight.Wbem.IWbemClassObject"/>, which is the result of a semisynchronous call to <see cref="M:WmiLight.Wbem.IWbemServices.GetObject(System.String,System.Int32,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemClassObject@,WmiLight.Wbem.IWbemCallResult@)"/>.
            </summary>
            <param name="timeout">The maximum time in milliseconds that this call blocks before returning.</param>
            <param name="resultObject">The copy of the object when it becomes available.</param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemCallResult.GetResultString(System.Int32,System.String@)">
            <summary>
            Returns an object path, which is the result of a semisynchronous call to <see cref="M:WmiLight.Wbem.IWbemServices.PutInstance(WmiLight.Wbem.IWbemClassObject,System.Int32,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemCallResult@)"/>.
            </summary>
            <param name="timeout">The maximum time in milliseconds that this call blocks before returning.</param>
            <param name="resultString">The assigned object path.</param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemCallResult.GetResultServices(System.Int32,WmiLight.Wbem.IWbemServices@)">
            <summary>
            Returns the result of a semisynchronous call to <see cref="M:WmiLight.Wbem.IWbemServices.OpenNamespace(System.String,System.Int32,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemServices@,WmiLight.Wbem.IWbemCallResult@)"/> verb action.
            </summary>
            <param name="timeout">The maximum time in milliseconds that this call blocks before returning.</param>
            <param name="services">The <see cref="T:WmiLight.Wbem.IWbemServices"/> object.</param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemCallResult.GetCallStatus(System.Int32,WmiLight.HResult@)">
            <summary>
            Reports whether a semisynchronous call was successful.
            </summary>
            <param name="timeout">The maximum time in milliseconds that this call blocks before returning.</param>
            <param name="status">The final result status of the call.</param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="T:WmiLight.Wbem.IWbemClassObjectEnumerator">
            <summary>
            Enumerator that works with objects of type <see cref="T:WmiLight.Wbem.IWbemClassObject"/>.
            </summary>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa390857(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObjectEnumerator.Reset">
            <summary>
            Resets an enumeration sequence back to the beginning.
            </summary>
            <returns>A value that gives information about the status of an operation</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObjectEnumerator.Next(System.Int32,System.UInt32,WmiLight.Wbem.IWbemClassObject@,System.UInt32@)">
            <summary>
            Retrieves the next object (or objects) in the enumeration starting from the current position.
            </summary>
            <param name="timeOut">
            Specifies the maximum amount of time in milliseconds that the call blocks before returning. <para />
            If you use the constant <see cref="F:System.Threading.Timeout.Infinite"/>, the call blocks until objects are available. <para />
            If you use the value 0, the call returns immediately, whether any objects are available or not.
            </param>
            <param name="count">Number of requested objects.</param>
            <param name="objects">The requested object.</param>
            <param name="returnedCount">The number of objects returned.</param>
            <returns>A value that gives information about the status of an operation</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObjectEnumerator.NextAsync(System.UInt32,WmiLight.Wbem.IWbemObjectSink)">
            <summary>
            Retrieves the next object or objects using asynchronous integration with <see cref="T:WmiLight.Wbem.IWbemObjectSink"/>.
            </summary>
            <param name="count">Number of objects being requested.</param>
            <param name="sink">Sink to receive the objects. The sink must be implemented by the caller.</param>
            <returns>A value that gives information about the status of an operation</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObjectEnumerator.Clone(WmiLight.Wbem.IWbemClassObjectEnumerator@)">
            <summary>
            Makes a copy of the enumerator.
            </summary>
            <param name="enumerator">A new <see cref="T:WmiLight.Wbem.IWbemClassObjectEnumerator"/> object. </param>
            <returns>A value that gives information about the status of an operation</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObjectEnumerator.Skip(System.Int32,System.UInt32)">
            <summary>
            Causes the enumeration to skip ahead so that future calls to the Next method retrieve objects one, or more, ahead of the current location in the enumeration.
            </summary>
            <param name="timeOut">
            Maximum amount of time in milliseconds that the call to Skip blocks before returning. <para />
            If you use the constant <see cref="F:System.Threading.Timeout.Infinite"/>, the call blocks until the operation succeeds. <para />
            If Skip cannot complete the operation before the <paramref name="timeOut"/> value expires, the call returns <see cref="F:WmiLight.Wbem.WbemStatus.WBEM_S_TIMEDOUT"/>.
            </param>
            <param name="count">
            Number of objects to skip. <para />
            If this parameter is greater than the number of objects left to enumerate, then this call skips to the end of the enumeration and <see cref="F:WmiLight.Wbem.WbemStatus.WBEM_S_FALSE"/> is returned.
            </param>
            <returns>A value that gives information about the status of an operation</returns>
        </member>
        <member name="T:WmiLight.Wbem.IWbemClassObject">
            <summary>
            Contains and manipulates both class definitions and class object instances. Developers need not implement this interface; WMI provides its implementation.
            </summary>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa391433(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObject.GetQualifierSet(WmiLight.Wbem.IWbemQualifierSet@)">
            <summary>
            Allows access to the qualifier set of the entire object.
            </summary>
            <param name="qualifierSet">The object that allows access to the qualifiers for the class object.</param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObject.Get(System.String,System.Int32,System.Object@,WmiLight.CimType@,System.Int32@)">
            <summary>
            Gets a particular property value.
            </summary>
            <param name="propertyName">Name of the desired property.</param>
            <param name="flags">Reserved. This parameter must be 0.</param>
            <param name="value">The correct type and value for the qualifier.</param>
            <param name="type">The CIM type of the property.</param>
            <param name="flavor">The value pointed to receives information about the origin of the property.</param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObject.Put(System.String,System.Int32,System.Object,WmiLight.CimType)">
            <summary>
            Updates or creates a particular property value.
            </summary>
            <param name="propertyName">A valid property name.</param>
            <param name="flags">Reserved. This parameter must be 0.</param>
            <param name="value">The object, which becomes the new property value.</param>
            <param name="type">The correct type and value for the qualifier.</param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObject.Delete(System.String)">
            <summary>
            Removes the specified property from the object.
            </summary>
            <param name="propertyName">Property name to delete.</param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObject.GetNames(System.String,WmiLight.Wbem.WbemConditionFlag,System.Object@,System.String[]@)">
            <summary>
            Obtains a list of the names of the properties in the object.
            </summary>
            <param name="qualifierName">
            A qualifier name which operates as part of a filter
            <para/>
            Can be NULL.
            </param>
            <param name="flags">Combination of flags. (see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa391447(v=vs.85).aspx"/>)</param>
            <param name="qualifierValue">
            A valid object initialized to a filter value.
            <para/>
            Can be NULL.
            </param>
            <param name="names">The names.</param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObject.BeginEnumeration(System.Int32)">
            <summary>
            Begins an enumeration of the properties.
            </summary>
            <param name="enumFlags">Combination of flags. (see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa391434(v=vs.85).aspx"/>)</param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObject.Next(System.Int32,System.String,System.Object@,WmiLight.CimType@,System.Int32@)">
            <summary>
            Obtains the next property in an enumeration after an initial call to <see cref="M:WmiLight.Wbem.IWbemClassObject.BeginEnumeration(System.Int32)"/>.
            </summary>
            <param name="flags">Reserved. This parameter must be 0.</param>
            <param name="strName">The property name.</param>
            <param name="value">The object filled with the value of the property.</param>
            <param name="type">The <see cref="T:WmiLight.CimType"/> variable into which the type of the property is placed.</param>
            <param name="flavor">The origin of the property (see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa391453(v=vs.85).aspx"/>)</param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObject.EndEnumeration">
            <summary>
            Ends an enumeration begun with <see cref="M:WmiLight.Wbem.IWbemClassObject.BeginEnumeration(System.Int32)"/>.
            </summary>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObject.GetPropertyQualifierSet(System.String,WmiLight.Wbem.IWbemQualifierSet@)">
            <summary>
            Allows access to the qualifiers of a particular property.
            </summary>
            <param name="property">Property for which the qualifier set is requested.</param>
            <param name="qualifierSet">The <see cref="T:WmiLight.Wbem.IWbemQualifierSet"/> instance that allows access to the qualifiers for the named property.</param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObject.Clone(WmiLight.Wbem.IWbemClassObject@)">
            <summary>
            Makes a copy of the current object.
            </summary>
            <param name="copy">The copy of the current object.</param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObject.GetObjectText(System.Int32,System.String@)">
            <summary>
            Obtains the textual rendition of the object in Managed Object Format (MOF) syntax.
            </summary>
            <param name="flags">
            Normally 0. 
            <para />
            If 1 is specified, qualifiers will be presented without propagation or flavor information.</param>
            <param name="objectText">The object text.</param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObject.SpawnDerivedClass(System.Int32,WmiLight.Wbem.IWbemClassObject@)">
            <summary>
            Creates a new derived class from the current class.
            </summary>
            <param name="flags">Reserved. This parameter must be 0.</param>
            <param name="newClass">The new class definition object.</param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObject.SpawnInstance(System.Int32,WmiLight.Wbem.IWbemClassObject@)">
            <summary>
            Creates a new instance from the current class.
            </summary>
            <param name="flags">Reserved. This parameter must be 0.</param>
            <param name="newInstance">A new instance of the class.</param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObject.CompareTo(WmiLight.Wbem.WbemClassObjectComparisonOption,WmiLight.Wbem.IWbemClassObject)">
            <summary>
            Tests two objects for equality.
            </summary>
            <param name="compareOption">
            Specifies the object characteristics to consider in comparison to another object. <para />
            It can be <see cref="F:WmiLight.Wbem.WbemClassObjectComparisonOption.IncludeAll"/> to consider all features, or any combination of these options.
            </param>
            <param name="compareTo">An <see cref="T:WmiLight.Wbem.IWbemClassObject"/> object to compare with this instance.</param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObject.GetPropertyOrigin(System.String,System.String@)">
            <summary>
            Reports the class in which a particular property was introduced.
            </summary>
            <param name="name">Property name for which the owning class name is desired.</param>
            <param name="className">The parent class name.</param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObject.InheritsFrom(System.String)">
            <summary>
            Reports whether the current object inherits from a particular class.
            </summary>
            <param name="ancestor">The class name that is being tested.</param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObject.GetMethod(System.String,System.Int32,WmiLight.Wbem.IWbemClassObject@,WmiLight.Wbem.IWbemClassObject@)">
            <summary>
            Gets the in- and out-parameter definitions for a specific method.
            </summary>
            <param name="name">The method name.</param>
            <param name="flags">Reserved. This parameter must be 0.</param>
            <param name="inSignature">A <see cref="T:WmiLight.Wbem.IWbemClassObject"/> object which describes the in parameters to the method.</param>
            <param name="outSignature">A <see cref="T:WmiLight.Wbem.IWbemClassObject"/> object which describes the out-parameters to the method. </param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObject.PutMethod(System.String,System.Int32,WmiLight.Wbem.IWbemClassObject,WmiLight.Wbem.IWbemClassObject)">
            <summary>
            Creates a method.
            </summary>
            <param name="name">The method name that is created.</param>
            <param name="flags">Reserved. This parameter must be 0.</param>
            <param name="inSignature">A <see cref="T:WmiLight.Wbem.IWbemClassObject"/> object which describes the in parameters to the method.</param>
            <param name="outSignature">A <see cref="T:WmiLight.Wbem.IWbemClassObject"/> object which describes the out-parameters to the method. </param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObject.DeleteMethod(System.String)">
            <summary>
            Removes a method.
            </summary>
            <param name="name">Method name to be removed from the class definition.</param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObject.BeginMethodEnumeration(System.Int32)">
            <summary>
            Begins an enumeration of methods for the object.
            </summary>
            <param name="enumFlags">Specifies the scope of the enumeration.</param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObject.NextMethod(System.Int32,System.String,WmiLight.Wbem.IWbemClassObject@,WmiLight.Wbem.IWbemClassObject@)">
            <summary>
            Retrieves the next method definition in an enumeration of methods.
            </summary>
            <param name="flags">Reserved. This parameter must be 0.</param>
            <param name="name">The method name.</param>
            <param name="inSignature">A <see cref="T:WmiLight.Wbem.IWbemClassObject"/> object which describes the in parameters to the method.</param>
            <param name="outSignature">A <see cref="T:WmiLight.Wbem.IWbemClassObject"/> object which describes the out-parameters to the method. </param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObject.EndMethodEnumeration">
            <summary>
            Ends the enumeration of methods for an object.
            </summary>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObject.GetMethodQualifierSet(System.String,WmiLight.Wbem.IWbemQualifierSet@)">
            <summary>
            Returns the qualifier set object for a specific method.
            </summary>
            <param name="method">The method name.</param>
            <param name="qualifierSet">The object that allows access to the qualifiers for the method.</param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObject.GetMethodOrigin(System.String,System.String@)">
            <summary>
            Reports the class in which a method is defined.
            </summary>
            <param name="methodName">Name of the method for the object whose owning class is being requested.</param>
            <param name="className">The name of the class which owns the method.</param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="T:WmiLight.Wbem.IWbemObjectSink">
            <summary>
            Used to receive both the results of <see cref="T:WmiLight.Wbem.IWbemServices"/> and certain types of event notifications.
            </summary>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa391787(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemObjectSink.Indicate(System.Int32,WmiLight.Wbem.IWbemClassObject[])">
            <summary>
            Receives notification objects.
            </summary>
            <param name="objectCount">Number of objects in the following array of pointers.</param>
            <param name="objArray">Array of <see cref="T:WmiLight.Wbem.IWbemClassObject"/> interfaces.</param>
            <returns>A value that gives information about the status of an operation</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemObjectSink.SetStatus(System.Int32,WmiLight.HResult,System.String,WmiLight.Wbem.IWbemClassObject)">
            <summary>
            Receives notification status.
            </summary>
            <param name="flags">Bitmask of status information. The status of the operation can be obtained by examining the <paramref name="hresult"/> parameter.</param>
            <param name="hresult">The HRESULT of the asynchronous operation or notification.</param>
            <param name="param">For example, when using <see cref="M:WmiLight.Wbem.IWbemServices.PutInstanceAsync(WmiLight.Wbem.IWbemClassObject,System.Int32,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemObjectSink)"/>, <see cref="M:WmiLight.Wbem.IWbemObjectSink.SetStatus(System.Int32,WmiLight.HResult,System.String,WmiLight.Wbem.IWbemClassObject)"/> is called with this parameter set to the object path of the newly created instance.</param>
            <param name="objectParam">In cases where a complex error or status object is returned, this contains the error object.</param>
            <returns>A value that gives information about the status of an operation</returns>
        </member>
        <member name="T:WmiLight.Wbem.IWbemQualifierSet">
            <summary>
            Acts as a container for the entire set of named qualifiers for a single property or entire object (a class or instance).
            </summary>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa391860(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemQualifierSet.BeginEnumeration(System.Int32)">
            <summary>
            Resets prior to an enumeration of all qualifiers.
            </summary>
            <param name="flags">Specifies the qualifiers to include in the enumeration. (<see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa391861(v=vs.85).aspx"/>)</param>
            <returns>A value that gives information about the status of an operation</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemQualifierSet.Delete(System.String)">
            <summary>
            Deletes the specified named qualifier.
            </summary>
            <param name="name">Name of the qualifier to delete. </param>
            <returns>A value that gives information about the status of an operation</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemQualifierSet.EndEnumeration">
            <summary>
            Ends an enumeration of qualifiers.
            </summary>
            <returns>A value that gives information about the status of an operation</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemQualifierSet.Get(System.String,System.Int32,System.Object@,System.Int32@)">
            <summary>
            Reads a particular named qualifier.
            </summary>
            <param name="name">Name of the qualifier for which the value is being requested.</param>
            <param name="flags">Reserved. This parameter must be 0.</param>
            <param name="value">The correct type and value for the qualifier. </param>
            <param name="flavor">
            Can be NULL. 
            If not NULL, this must point to a LONG that receives the qualifier flavor bits for the requested qualifier. For more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392900(v=vs.85).aspx"/>.
            </param>
            <returns>A value that gives information about the status of an operation</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemQualifierSet.GetNames(System.Int32,System.IntPtr@)">
            <summary>
            Gets the names of qualifiers subject to certain filters.
            </summary>
            <param name="flags">Default 0 (<see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa391868(v=vs.85).aspx"/>).</param>
            <param name="names">A new <see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray"/> is created that contains the requested names.</param>
            <returns>A value that gives information about the status of an operation</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemQualifierSet.Next(System.Int32,System.String@,System.Object@,System.Int32@)">
            <summary>
            Gets the next qualifier during an enumeration of all qualifiers.
            </summary>
            <param name="flags">Reserved. This parameter must be 0.</param>
            <param name="name">This parameter receives the name of the qualifier.</param>
            <param name="value">This parameter receives the value for the qualifier.</param>
            <param name="flavor">
            If not NULL, the value pointed to is set to the qualifier flavor. <para />
            For more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392900(v=vs.85).aspx"/>.
            </param>
            <returns>A value that gives information about the status of an operation</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemQualifierSet.Put(System.String,System.Object,System.Int32)">
            <summary>
            Writes a particular named qualifier.
            </summary>
            <param name="name">Name of the qualifier that is being written.</param>
            <param name="value">
            The qualifier value to be written. <para />
            Only variants and arrays of type <see cref="F:System.Runtime.InteropServices.VarEnum.VT_I4"/>, <see cref="F:System.Runtime.InteropServices.VarEnum.VT_R8"/>, <see cref="F:System.Runtime.InteropServices.VarEnum.VT_BSTR"/>, <see cref="F:System.Runtime.InteropServices.VarEnum.VT_BOOL"/> are supported.
            </param>
            <param name="flavor">Desired qualifier flavors for this qualifier.The default value is 0.</param>
            <returns>A value that gives information about the status of an operation</returns>
        </member>
        <member name="T:WmiLight.Wbem.IWbemCallResultExtensions">
            <summary>
            Static class with extension methods for the <see cref="T:WmiLight.Wbem.IWbemCallResult"/> interface.
            </summary>
        </member>
        <member name="T:WmiLight.Wbem.IWbemClassObjectExtensions">
            <summary>
            Static class with extension methods for the <see cref="T:WmiLight.Wbem.IWbemClassObject"/> interface.
            </summary>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObjectExtensions.GetNames(WmiLight.Wbem.IWbemClassObject,WmiLight.Wbem.WbemConditionFlag)">
            <summary>
            Gets the names of all properties in the object.
            </summary>
            <param name="this">The <see cref="T:WmiLight.Wbem.IWbemClassObject"/> object which will be used to execute the method.</param>
            <param name="flags">Combination of flags. (see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa391447(v=vs.85).aspx"/>)</param>
            <returns>The names of all properties.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObjectExtensions.Get(WmiLight.Wbem.IWbemClassObject,System.String)">
            <summary>
            Gets a particular property value.
            </summary>
            <param name="this">The <see cref="T:WmiLight.Wbem.IWbemClassObject"/> object which will be used to execute the method.</param>
            <param name="propertyName">Name of the desired property.</param>
            <returns>The correct type and value for the qualifier.</returns>
        </member>
        <member name="T:WmiLight.Wbem.IWbemClassObjectEnumeratorExtensions">
            <summary>
            Static class with extension methods for the <see cref="T:WmiLight.Wbem.IWbemClassObjectEnumerator"/> interface.
            </summary>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObjectEnumeratorExtensions.SetProxy(WmiLight.Wbem.IWbemClassObjectEnumerator,System.String,System.String,System.String,WmiLight.ImpersonationLevel,WmiLight.AuthenticationLevel)">
            <summary>
            Sets the authentication information that will be used to make calls on the specified proxy.
            </summary>
            <param name="this">The <see cref="T:WmiLight.Wbem.IWbemClassObjectEnumerator"/> object which will by wrapped with a proxy.</param>
            <param name="userName">The name of the user.</param>
            <param name="password">The password of the user.</param>
            <param name="authority">
            The authority to be used to authenticate the specified user.
            <para />
            Example: "ntlmdomain:MYDOMAIN"
            </param>
            <param name="impersonationLevel">The impersonation level which will be used.</param>
            <param name="authenticationLevel">The authentication level which will be used.</param>
        </member>
        <member name="M:WmiLight.Wbem.IWbemClassObjectEnumeratorExtensions.Next(WmiLight.Wbem.IWbemClassObjectEnumerator)">
            <summary>
            Retrieves the next object in the enumeration starting from the current position.
            </summary>
            <param name="this">The <see cref="T:WmiLight.Wbem.IWbemClassObjectEnumerator"/> which will be moved.</param>
            <returns>The next object in the enumeration.</returns>
        </member>
        <member name="T:WmiLight.Wbem.IWbemContextExtensions">
            <summary>
            Static class with extension methods for the <see cref="T:WmiLight.Wbem.IWbemContext"/> interface.
            </summary>
        </member>
        <member name="T:WmiLight.Wbem.IWbemLocatorExtensions">
            <summary>
            Static class with extension methods for the <see cref="T:WmiLight.Wbem.IWbemLocator"/> interface.
            </summary>
        </member>
        <member name="M:WmiLight.Wbem.IWbemLocatorExtensions.ConnectServer(WmiLight.Wbem.IWbemLocator,System.String,System.String,System.String,System.String,WmiLight.Wbem.WbemConnectOption,System.String,WmiLight.Wbem.IWbemContext)">
            <summary>
            Creates a connection through DCOM to a WMI namespace on the computer specified in the <paramref name="networkResource"/> parameter.
            </summary>
            <param name="this">The <see cref="T:WmiLight.Wbem.IWbemLocator"/> which will be used.</param>
            <param name="networkResource">
            The object path of the correct WMI namespace.
            <para/>
            For local access to the default namespace, use a simple object path: "root\default" or "\\.\root\default". 
            <para />
            For access to the default namespace on a remote computer using COM or Microsoft-compatible networking, include the computer name: "\\server\root\default". 
            </param>
            <param name="userName">
            The user name you need for a connection. A NULL value indicates the current security context. If the user name is from a domain different from the current domain, the string may contain the domain name and user name separated by a backslash.
            <para />
            The <paramref name="userName"/> parameter cannot be an empty string. Note that if the domain is specified in <paramref name="authority"/>, then it must not be specified here. Specifying the domain in both parameters results in an invalid parameter error.
            <para /> 
            You can use the user principal name (UPN) format, which is Username@DomainName to specify the <paramref name="userName"/>.
            <para />
            <para />
            Windows 2000 and Windows NT 4.0:  You cannot use the user principal name (UPN) format.
            </param>
            <param name="userPassword">The password you need for a connection. A NULL value indicates the current security context. A blank string "" specifies a valid zero-length password.</param>
            <param name="locale">
            If NULL, the current locale is used. If not NULL, this parameter must indicates the correct locale for information retrieval. 
            For Microsoft locale identifiers, the format of the string is "MS_xxx", where xxx is a string in hexadecimal form that indicates the Local Identification (LCID), for example, American English would appear as "MS_409". 
            If an invalid locale is specified, then the method returns <see cref="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_PARAMETER"/>.
            <para />
            <para />
            Windows 7:  If an invalid locale is specified, then the default locale of the server is used unless there is a server-supported locale provided by the user application.
            </param>
            <param name="wbemConnectOption">The connection flag.</param>
            <param name="authority">
            This parameter contains the name of the domain of the user to authenticate.
            <para />
            <paramref name="authority"/> can have the following values:
            <para />
            - blank: If you leave this parameter blank, NTLM authentication is used and the NTLM domain of the current user is used. If the domain is specified in <paramref name="userName"/>, 
            which is the recommended location, then it must not be specified here. Specifying the domain in both parameters results in an invalid parameter error.
            - Kerberos: &lt;principal name&lt; (Kerberos authentication is used and this parameter should contain a Kerberos principal name.)
            - NTLMDOMAIN: &lt;domain name&gt; (NT LAN Manager authentication is used and this parameter should contain an NTLM domain name.)
            </param>
            <param name="ctx">
            Typically, this is NULL. 
            Otherwise, this is an <see cref="T:WmiLight.Wbem.IWbemContext"/> object required by one or more dynamic class providers.
            The values in the context object must be specified in the documentation for the providers in question. 
            For more information about this parameter, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392303(v=vs.85).aspx"/>.
            </param>
            <returns>An <see cref="T:WmiLight.Wbem.IWbemServices"/> object bound to the specified namespace.</returns>
        </member>
        <member name="T:WmiLight.Wbem.IWbemObjectSinkExtensions">
            <summary>
            Static class with extension methods for the <see cref="T:WmiLight.Wbem.IWbemObjectSink"/> interface.
            </summary>
        </member>
        <member name="T:WmiLight.Wbem.IWbemQualifierSetExtensions">
            <summary>
            Static class with extension methods for the <see cref="T:WmiLight.Wbem.IWbemQualifierSet"/> interface.
            </summary>
        </member>
        <member name="T:WmiLight.Wbem.IWbemServicesExtensions">
            <summary>
            Static class with extension methods for the <see cref="T:WmiLight.Wbem.IWbemServices"/> interface.
            </summary>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServicesExtensions.SetProxy(WmiLight.Wbem.IWbemServices,System.String,System.String,System.String,WmiLight.ImpersonationLevel,WmiLight.AuthenticationLevel)">
            <summary>
            Sets the authentication information that will be used to make calls on the specified proxy.
            </summary>
            <param name="this">The <see cref="T:WmiLight.Wbem.IWbemServices"/> object which will by wrapped with a proxy.</param>
            <param name="userName">The name of the user.</param>
            <param name="password">The password of the user.</param>
            <param name="authority">
            The authority to be used to authenticate the specified user.
            <para />
            Example: "ntlmdomain:MYDOMAIN"
            </param>
            <param name="impersonationLevel">The impersonation level which will be used.</param>
            <param name="authenticationLevel">The authentication level which will be used.</param>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServicesExtensions.SetProxy(WmiLight.Wbem.IWbemServices,WmiLight.ImpersonationLevel,WmiLight.AuthenticationLevel)">
            <summary>
            Sets the local authentication information that will be used to make calls on the specified proxy.
            </summary>
            <param name="this">The <see cref="T:WmiLight.Wbem.IWbemServices"/> object which will by wrapped with a proxy.</param>
            <param name="impersonationLevel">The impersonation level which will be used.</param>
            <param name="authenticationLevel">The authentication level which will be used.</param>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServicesExtensions.ExecQuery(WmiLight.Wbem.IWbemServices,System.String,WmiLight.Wbem.WbemClassObjectEnumeratorBehaviorOption,WmiLight.Wbem.IWbemContext)">
            <summary>
            Executes a query to retrieve objects.
            </summary>
            <param name="this">The <see cref="T:WmiLight.Wbem.IWbemServices"/> object which will be used.</param>
            <param name="query">The query which will be executed.</param>
            <param name="enumeratorBehaviorOption">Flag for the behavior of the created enumerator.</param>
            <param name="ctx">
            Typically, this is NULL. 
            Otherwise, this is an <see cref="T:WmiLight.Wbem.IWbemContext"/> object required by one or more dynamic class providers.
            </param>
            <returns>The enumerator for the results of the query.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServicesExtensions.ExecQuery(WmiLight.Wbem.IWbemServices,System.String,WmiLight.Wbem.WbemClassObjectEnumeratorBehaviorOption,WmiLight.Wbem.IWbemContext,WmiLight.AuthenticationLevel,WmiLight.ImpersonationLevel,System.String,System.String,System.String)">
            <summary>
            Sets the authentication information and executes a query to retrieve objects.
            </summary>
            <param name="this">The <see cref="T:WmiLight.Wbem.IWbemServices"/> object which will by wrapped with a proxy.</param>
            <param name="query">The query which will be executed.</param>
            <param name="enumeratorBehaviorOption">Flag for the behavior of the created enumerator.</param>
            <param name="ctx">
            Typically, this is NULL. 
            Otherwise, this is an <see cref="T:WmiLight.Wbem.IWbemContext"/> object required by one or more dynamic class providers.
            </param>
            <param name="impersonationLevel">The impersonation level which will be used.</param>
            <param name="authenticationLevel">The authentication level which will be used.</param>
            <param name="userName">The name of the user.</param>
            <param name="password">The password of the user.</param>
            <param name="authority">
            The authority to be used to authenticate the specified user.
            <para />
            Example: "ntlmdomain:MYDOMAIN"
            </param>
            <returns>The enumerator for the results of the query.</returns>
        </member>
        <member name="T:WmiLight.Wbem.WbemClassObjectComparisonOption">
            <summary>
            Options for <see cref="T:WmiLight.Wbem.IWbemClassObject"/> object comparison.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemClassObjectComparisonOption.IncludeAll">
            <summary>
            Considered all features.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemClassObjectComparisonOption.IgnoreQualifiers">
            <summary>
            Ignore all qualifiers (including Key and Dynamic) in comparison.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemClassObjectComparisonOption.IgnoreObjectSource">
            <summary>
            Ignore the source of the objects, namely the server and the namespace they came from, in comparison to other objects.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemClassObjectComparisonOption.IgnoreDefaultValues">
            <summary>
            Ignore default values of properties. This option is only meaningful when comparing classes.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemClassObjectComparisonOption.IgnoreClass">
            <summary>
            Assume that the objects being compared are instances of the same class. 
            Consequently, this option compares instance-related information only.
            Use this flag to optimize performance. 
            If the objects are not of the same class, the results are undefined.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemClassObjectComparisonOption.IgnoreCase">
            <summary>
            Compare string values in a case-insensitive manner. 
            This applies both to strings and to qualifier values. 
            Property and qualifier names are always compared in a case-insensitive manner whether this option is specified or not.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemClassObjectComparisonOption.IgnoreFlavor">
            <summary>
            Ignore qualifier flavors. 
            This flag still takes qualifier values into account, but ignores flavor distinctions such as propagation rules and override restrictions (for more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392900(v=vs.85).aspx"/>).
            </summary>
        </member>
        <member name="T:WmiLight.Wbem.WbemClassObjectEnumeratorBehaviorOption">
            <summary>
            The options to change the behavior of the <see cref="T:WmiLight.Wbem.IWbemClassObjectEnumerator"/>.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemClassObjectEnumeratorBehaviorOption.Bidirectional">
            <summary>
            This option causes WMI to retain pointers to objects of the enumeration until the client releases the enumerator.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemClassObjectEnumeratorBehaviorOption.Prototype">
            <summary>
            This option is used for prototyping. It does not execute the query and instead returns an object that looks like a typical result object.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemClassObjectEnumeratorBehaviorOption.ReturnImmediately">
            <summary>
            This option causes this to be a semisynchronous call.
            <para />
            For more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa384832(v=vs.85).aspx"/>.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemClassObjectEnumeratorBehaviorOption.ForwardOnly">
            <summary>
            This flag causes a forward-only enumerator to be returned. 
            <para />
            Forward-only enumerators are generally much faster and use less memory than conventional enumerators but do not allow calls to 
            <see cref="M:WmiLight.Wbem.IWbemClassObjectEnumerator.Clone(WmiLight.Wbem.IWbemClassObjectEnumerator@)"/> or <see cref="M:WmiLight.Wbem.IWbemClassObjectEnumerator.Reset"/>.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemClassObjectEnumeratorBehaviorOption.DirectRead">
            <summary>
            This option causes direct access to the provider for the class specified without any regard to its parent class or subclasses.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemClassObjectEnumeratorBehaviorOption.EnsureLocatable">
            <summary>
            This option ensures that any returned objects have enough information in them so that the system properties, such as __PATH, __RELPATH, and __SERVER, are non-NULL.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemClassObjectEnumeratorBehaviorOption.UseAmendedQualifiers">
            <summary>
            If this option is set, WMI retrieves the amended qualifiers stored in the localized namespace of the current connection's locale.
            <para />
            If not set, only the qualifiers stored in the immediate namespace are retrieved.
            </summary>
        </member>
        <member name="T:WmiLight.Wbem.WbemConnectOption">
            <summary>
            The connection option for the <see cref="M:WmiLight.Wbem.IWbemLocator.ConnectServer(System.String,System.String,System.String,System.String,WmiLight.Wbem.WbemConnectOption,System.String,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemServices@)"/> call.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemConnectOption.None">
            <summary>
            The call to <see cref="M:WmiLight.Wbem.IWbemLocator.ConnectServer(System.String,System.String,System.String,System.String,WmiLight.Wbem.WbemConnectOption,System.String,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemServices@)"/> returning only after connection to the server is established.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemConnectOption.UseMaxWait">
            <summary>
            The call to <see cref="M:WmiLight.Wbem.IWbemLocator.ConnectServer(System.String,System.String,System.String,System.String,WmiLight.Wbem.WbemConnectOption,System.String,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemServices@)"/> call returns in 2 minutes or less. 
            Use this flag to prevent your program from ceasing to respond indefinitely if the server is broken.
            </summary>
            <remarks>Windows 2000 and Windows NT 4.0: This value is not available.</remarks>
        </member>
        <member name="T:WmiLight.Wbem.WbemLocator">
            <summary>
            Use the <see cref="T:WmiLight.Wbem.WbemLocator"/> class to obtain the initial namespace pointer to the <see cref="T:WmiLight.Wbem.IWbemServices"/> interface for WMI on a specific host computer. 
            You can access Windows Management itself using the <see cref="T:WmiLight.Wbem.IWbemServices"/> pointer, which is returned by the <see cref="M:WmiLight.Wbem.WbemLocator.ConnectServer(System.String,System.String,System.String,System.String,WmiLight.Wbem.WbemConnectOption,System.String,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemServices@)"/> method.
            </summary>
        </member>
        <member name="M:WmiLight.Wbem.WbemLocator.ConnectServer(System.String,System.String,System.String,System.String,WmiLight.Wbem.WbemConnectOption,System.String,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemServices@)">
            <summary>
            Creates a connection through DCOM to a WMI namespace on the computer specified in the <paramref name="networkResource"/> parameter.
            </summary>
            <param name="networkResource">
            The object path of the correct WMI namespace.
            <para/>
            For local access to the default namespace, use a simple object path: "root\default" or "\\.\root\default". 
            <para />
            For access to the default namespace on a remote computer using COM or Microsoft-compatible networking, include the computer name: "\\server\root\default". 
            </param>
            <param name="userName">
            The user name you need for a connection. A NULL value indicates the current security context. If the user name is from a domain different from the current domain, the string may contain the domain name and user name separated by a backslash.
            <para />
            The <paramref name="userName"/> parameter cannot be an empty string. Note that if the domain is specified in <paramref name="authority"/>, then it must not be specified here. Specifying the domain in both parameters results in an invalid parameter error.
            <para /> 
            You can use the user principal name (UPN) format, which is Username@DomainName to specify the <paramref name="userName"/>.
            <para />
            <para />
            Windows 2000 and Windows NT 4.0:  You cannot use the user principal name (UPN) format.
            </param>
            <param name="userPassword">The password you need for a connection. A NULL value indicates the current security context. A blank string "" specifies a valid zero-length password.</param>
            <param name="locale">
            If NULL, the current locale is used. If not NULL, this parameter must indicates the correct locale for information retrieval. 
            For Microsoft locale identifiers, the format of the string is "MS_xxx", where xxx is a string in hexadecimal form that indicates the Local Identification (LCID), for example, American English would appear as "MS_409". 
            If an invalid locale is specified, then the method returns <see cref="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_PARAMETER"/>.
            <para />
            <para />
            Windows 7:  If an invalid locale is specified, then the default locale of the server is used unless there is a server-supported locale provided by the user application.
            </param>
            <param name="wbemConnectOption">The connection flag.</param>
            <param name="authority">
            This parameter contains the name of the domain of the user to authenticate.
            <para />
            <paramref name="authority"/> can have the following values:
            <para />
            - blank: If you leave this parameter blank, NTLM authentication is used and the NTLM domain of the current user is used. If the domain is specified in <paramref name="userName"/>, 
            which is the recommended location, then it must not be specified here. Specifying the domain in both parameters results in an invalid parameter error.
            - Kerberos: &lt;principal name&lt; (Kerberos authentication is used and this parameter should contain a Kerberos principal name.)
            - NTLMDOMAIN: &lt;domain name&gt; (NT LAN Manager authentication is used and this parameter should contain an NTLM domain name.)
            </param>
            <param name="ctx">
            Typically, this is NULL. 
            Otherwise, this is an <see cref="T:WmiLight.Wbem.IWbemContext"/> object required by one or more dynamic class providers.
            The values in the context object must be specified in the documentation for the providers in question. 
            For more information about this parameter, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392303(v=vs.85).aspx"/>.
            </param>
            <param name="wbemServices">
            Receives an <see cref="T:WmiLight.Wbem.IWbemServices"/> object bound to the specified namespace. This pointer has a positive reference count. 
            This is set to NULL when there is an error.
            </param>
            <returns>A value that gives information about the status of an operation.</returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa391769(v=vs.85).aspx"/></remarks>
        </member>
        <member name="T:WmiLight.Wbem.WbemStatus">
            <summary>
            The <see cref="T:WmiLight.Wbem.WbemStatus"/> gives information about the status of an operation.
            </summary>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/cc250949.aspx"/></remarks>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_S_NO_ERROR">
            <summary>
            The operation was successful.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_S_FALSE">
            <summary>
            This value is returned when no more objects
            are available, the number of objects returned is less than the number requested,
            or at the end of an enumeration.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_S_ALREADY_EXISTS">
            <summary>
            The value already exists.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_S_RESET_TO_DEFAULT">
            <summary>
            An overridden property was deleted. 
            This value is returned to signal that the original, non-overridden value has been restored as a result of the deletion.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_S_DIFFERENT">
            <summary>
            The compared items (such as objects and classes) are not identical.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_S_TIMEDOUT">
            <summary>
            A call timed out. This is not an error condition; therefore, some results may have been returned.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_S_NO_MORE_DATA">
            <summary>
            No more data is available from the enumeration; the user should terminate the enumeration.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_S_OPERATION_CANCELLED">
            <summary>
            The operation was canceled.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_S_PENDING">
            <summary>
            A request is still in progress; however, the results are not yet available.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_S_DUPLICATE_OBJECTS">
            <summary>
            More than one copy of the same object was detected in
            the result set of an enumeration.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_S_ACCESS_DENIED">
            <summary>
            The access was denied.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_S_PARTIAL_RESULTS">
            <summary>
            The user did not receive all of the requested objects
            because of inaccessible resources (other than security violations).
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_S_SOURCE_NOT_AVAILABLE">
            <summary>
            The source was not available.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_FAILED">
            <summary>
            The call failed.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_ACCESS_DENIED">
            <summary>
            The current user does not have permission to perform the action.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_OUT_OF_MEMORY">
            <summary>
            There was not enough memory for the operation.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_PARAMETER">
            <summary>
            One of the parameters to the call is not correct.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_NAMESPACE">
            <summary>
            The specified namespace could not be found.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_TRANSPORT_FAILURE">
            <summary>
            A networking error that prevents normal operation has occurred.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_LOCAL_CREDENTIALS">
            <summary>
            The user specified a username, password, or authority on a
            local connection. The user must use an empty user name and password and rely on
            default security.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_NOT_FOUND">
            <summary>
            The object could not be found.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_PROVIDER_FAILURE">
            <summary>
            The provider failed after initialization.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_CONTEXT">
            <summary>
            The context object is not valid.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_TYPE_MISMATCH">
            <summary>
            A type mismatch occurred.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_NOT_AVAILABLE">
            <summary>
            The resource, typically a remote server, is not
            currently available.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_CRITICAL_ERROR">
            <summary>
            An internal, critical, and unexpected error occurred. 
            Report this error to Microsoft Product Support Services.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_STREAM">
            <summary>
            One or more network packets were corrupted during a remote session.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_NOT_SUPPORTED">
            <summary>
            The feature or operation is not supported.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_SUPERCLASS">
            <summary>
            The specified base class is not valid.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_OBJECT">
            <summary>
            The specified instance is not valid.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_CLASS">
            <summary>
            The specified class is not valid.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_PROVIDER_NOT_FOUND">
            <summary>
            A provider referenced in the schema does not have a corresponding registration.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_PROVIDER_REGISTRATION">
            <summary>
            A provider referenced in the schema has an incorrect or incomplete registration.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_PROVIDER_LOAD_FAILURE">
            <summary>
            COM cannot locate a provider referenced in the schema.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INITIALIZATION_FAILURE">
            <summary>
            A component, such as a provider, failed to initialize for internal reasons.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_OPERATION">
            <summary>
            The requested operation is not valid. This error usually
            applies to invalid attempts to delete classes or properties.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.InvalidQuery">
            <summary>
            The query was not syntactically valid.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_QUERY">
            <summary>
            The requested query language is not supported.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_ALREADY_EXISTS">
            <summary>
            In a put operation, the <see cref="F:WmiLight.Wbem.WbemChangeMode.Create"/>
            flag was specified, but the instance already exists.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_OVERRIDE_NOT_ALLOWED">
            <summary>
            The add operation cannot be performed on the qualifier
            because the owning object does not permit overrides.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_PROPAGATED_QUALIFIER">
            <summary>
            The user attempted to delete a qualifier that was not
            owned. The qualifier was inherited from a parent class.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_PROPAGATED_PROPERTY">
            <summary>
            The user attempted to delete a property that was not owned. The property was inherited from a parent class.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_UNEXPECTED">
            <summary>
            The client made an unexpected and illegal sequence of calls.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_ILLEGAL_OPERATION">
            <summary>
            The user requested an illegal operation, such as
            spawning a class from an instance.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_CANNOT_BE_KEY">
            <summary>
            There was an illegal attempt to specify a key qualifier
            on a property that cannot be a key. The keys are specified in the class
            definition for an object and cannot be altered on a per-instance basis.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INCOMPLETE_CLASS">
            <summary>
            The current object is not a valid class definition.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_SYNTAX">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_NONDECORATED_OBJECT">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_READ_ONLY">
            <summary>
            The property that you are attempting to modify is read-only.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_PROVIDER_NOT_CAPABLE">
            <summary>
            The provider cannot perform the requested operation, such
            as requesting a query that is too complex, retrieving an instance, creating or
            updating a class, deleting a class, or enumerating a class.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_CLASS_HAS_CHILDREN">
            <summary>
            An attempt was made to make a change that would invalidate a derived class.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_CLASS_HAS_INSTANCES">
            <summary>
            An attempt has been made to delete or modify a class that has instances.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_QUERY_NOT_IMPLEMENTED">
            <summary>
             Reserved for future use.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_ILLEGAL_NULL">
            <summary>
            A value of null was specified for a property that may
            not be null, such as one that is marked by a Key, Indexed, or
            Not_Null qualifier.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_QUALIFIER_TYPE">
            <summary>
            The value provided for a qualifier was not a
             legal qualifier type.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_PROPERTY_TYPE">
            <summary>
            The CIM type specified for a property is not valid.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_VALUE_OUT_OF_RANGE">
            <summary>
            The request was made with an out-of-range value, or is
            incompatible with the type. 
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_CANNOT_BE_SINGLETON">
            <summary>
            An illegal attempt was made to make a class singleton,
            such as when the class is derived from a non-singleton class.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_CIM_TYPE">
            <summary>
            The CIM type specified is not valid.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_METHOD">
            <summary>
            The requested method is not available.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_METHOD_PARAMETERS">
            <summary>
            The parameters provided for the method are not valid.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_SYSTEM_PROPERTY">
            <summary>
            There was an attempt to get qualifiers on a system property.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_PROPERTY">
            <summary>
            The property type is not recognized.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_CALL_CANCELLED">
            <summary>
            An asynchronous process has been canceled internally or
            by the user. Note that because of the timing and nature of the asynchronous
            operation, the operation may not have been truly canceled.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_SHUTTING_DOWN">
            <summary>
            The user has requested an operation while WMI is in the
            process of quitting.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_PROPAGATED_METHOD">
            <summary>
            An attempt was made to reuse an existing method name from
            a base class, and the signatures did not match.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_UNSUPPORTED_PARAMETER">
            <summary>
            One or more parameter values, such as a query text, is
            too complex or unsupported. WMI is requested to retry the operation
            with simpler parameters.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_MISSING_PARAMETER_ID">
            <summary>
            A parameter was missing from the method call.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_PARAMETER_ID">
            <summary>
            A method parameter has an invalid ID-qualifier.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_NONCONSECUTIVE_PARAMETER_IDS">
            <summary>
            One or more of the method parameters have ID-qualifiers that are out of sequence.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_PARAMETER_ID_ON_RETVAL">
            <summary>
            The return value for a method has an ID-qualifier.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_OBJECT_PATH">
            <summary>
            The specified object path was invalid.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_OUT_OF_DISK_SPACE">
            <summary>
            There is not enough free disk space to continue the operation. 
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_BUFFER_TOO_SMALL">
            <summary>
            The supplied buffer was too small to hold all the objects in the enumerator or to read a string property.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_UNSUPPORTED_PUT_EXTENSION">
            <summary>
            The provider does not support the requested put operation.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_UNKNOWN_OBJECT_TYPE">
            <summary>
            An object with an incorrect type or version was encountered during marshaling.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_UNKNOWN_PACKET_TYPE">
            <summary>
            A packet with an incorrect type or version was encountered during marshaling.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_MARSHAL_VERSION_MISMATCH">
            <summary>
            The packet has an unsupported version.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_MARSHAL_INVALID_SIGNATURE">
            <summary>
            The packet is corrupted.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_QUALIFIER">
            <summary>
            An attempt has been made to mismatch qualifiers, such as putting [key] on an object instead of a property.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_DUPLICATE_PARAMETER">
            <summary>
            A duplicate parameter has been declared in a CIM method.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_TOO_MUCH_DATA">
            <summary>
            Reserved for future use. 
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_SERVER_TOO_BUSY">
            <summary>
            The delivery of an event has failed. The provider may choose to re-raise the event.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_FLAVOR">
            <summary>
            The specified flavor was invalid.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_CIRCULAR_REFERENCE">
            <summary>
            An attempt has been made to create a reference that is circular (for example, deriving a class from itself).
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_UNSUPPORTED_CLASS_UPDATE">
            <summary>
            The specified class is not supported.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_CANNOT_CHANGE_KEY_INHERITANCE">
            <summary>
            An attempt was made to change a key when instances or derived classes are already using the key. 
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_CANNOT_CHANGE_INDEX_INHERITANCE">
            <summary>
            An attempt was made to change an index when instances or derived classes are already using the index.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_TOO_MANY_PROPERTIES">
            <summary>
            An attempt was made to create more properties than the current version of the class supports.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_UPDATE_TYPE_MISMATCH">
            <summary>
            A property was redefined with a conflicting type in a derived class.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_UPDATE_OVERRIDE_NOT_ALLOWED">
            <summary>
            An attempt was made in a derived class to override a non-overrideable qualifier.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_UPDATE_PROPAGATED_METHOD">
            <summary>
            A method was redeclared with a conflicting signature in a derived class.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_METHOD_NOT_IMPLEMENTED">
            <summary>
            An attempt was made to execute a method not marked with [implemented] in any relevant class.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_METHOD_DISABLED">
            <summary>
            An attempt was made to execute a method marked with [disabled].
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_REFRESHER_BUSY">
            <summary>
            The refresher is busy with another operation.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_UNPARSABLE_QUERY">
            <summary>
            The filtering query is syntactically invalid.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_NOT_EVENT_CLASS">
            <summary>
            The FROM clause of a filtering query references a class that is not an event class.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_MISSING_GROUP_WITHIN">
            <summary>
            A GROUP BY clause was used without the corresponding GROUP WITHIN clause.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_MISSING_AGGREGATION_LIST">
            <summary>
            A GROUP BY clause was used. Aggregation on all properties is not supported.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_PROPERTY_NOT_AN_OBJECT">
            <summary>
            Dot notation was used on a property that is not an embedded object. 
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_AGGREGATING_BY_OBJECT">
            <summary>
            A GROUP BY clause references a property that is an embedded object without using dot notation.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_UNINTERPRETABLE_PROVIDER_QUERY">
            <summary>
            An event provider registration query did not specify the classes for which events were provided.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_BACKUP_RESTORE_WINMGMT_RUNNING">
            <summary>
            An request was made to back up or restore the repository while <see langword="WinMgmt.exe"/> was using it.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_QUEUE_OVERFLOW">
            <summary>
            The asynchronous delivery queue overflowed from the event consumer being too slow.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_PRIVILEGE_NOT_HELD">
            <summary>
            The operation failed because the client did not have the necessary security privilege.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_OPERATOR">
            <summary>
            The operator is not valid for this property type.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_CANNOT_BE_ABSTRACT">
            <summary>
            The class was made abstract when its base class is not abstract.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_AMENDED_OBJECT">
            <summary>
            An amended object was used in a put operation without the
            WBEM_FLAG_USE_AMENDED_QUALIFIERS flag being specified.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEM_E_CLIENT_TOO_SLOW">
            <summary>
            The client was not retrieving objects quickly enough from
            an enumeration.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEMESS_E_REGISTRATION_TOO_BROAD">
            <summary>
            The provider registration overlaps with the system event domain.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemStatus.WBEMESS_E_REGISTRATION_TOO_PRECISE">
            <summary>
            A WITHIN clause was not used in this query.
            </summary>
        </member>
        <member name="T:WmiLight.Wbem.IWbemContext">
            <summary>
            The <see cref="T:WmiLight.Wbem.IWbemContext"/> interface is optionally used to communicate additional context information 
            to providers when submitting <see cref="T:WmiLight.Wbem.IWbemServices"/> calls to WMI. 
            All primary calls in IWbemServices take an optional parameter pointing to an object of this type.
            </summary>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa391465(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemContext.Clone(WmiLight.Wbem.IWbemContext@)">
            <summary>
            Creates a complete copy of the current <see cref="T:WmiLight.Wbem.IWbemContext"/> object.
            </summary>
            <param name="newCopy">The new object containing the clone of the current object.</param>
            <returns>A value that gives information about the status of an operation</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemContext.GetNames(System.UInt32,System.IntPtr@)">
            <summary>
            Retrieves the names of all of the context values available.
            </summary>
            <param name="flags">Reserved. This parameter must be 0.</param>
            <param name="names">
            If no error is returned, on exit <paramref name="names"/> receives a pointer to a new SAFEARRAY structure of type VT_BSTR containing all the context value names.<para />
            The caller must call SafeArrayDestroy on the returned pointer when the array is no longer required. If an error code is returned, the pointer is left unmodified.
            </param>
            <returns>A value that gives information about the status of an operation</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemContext.BeginEnumeration(System.UInt32)">
            <summary>
            Begins an enumeration of all context values in the  object.
            </summary>
            <param name="flags">Reserved. This parameter must be 0.</param>
            <returns>A value that gives information about the status of an operation</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemContext.Next(System.UInt32,System.String@,System.Object@)">
            <summary>
            Retrieves the next value in an enumeration of all context values beginning with <see cref="M:WmiLight.Wbem.IWbemContext.BeginEnumeration(System.UInt32)"/>.
            </summary>
            <param name="flags">Reserved. This parameter must be 0.</param>
            <param name="name">The context value name.</param>
            <param name="value">The context value.</param>
            <returns>A value that gives information about the status of an operation</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemContext.EndEnumeration">
            <summary>
            Ends an enumeration begun with <see cref="M:WmiLight.Wbem.IWbemContext.BeginEnumeration(System.UInt32)"/> and <see cref="M:WmiLight.Wbem.IWbemContext.Next(System.UInt32,System.String@,System.Object@)"/>.
            </summary>
            <returns>A value that gives information about the status of an operation</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemContext.SetValue(System.String,System.UInt32,System.Object)">
            <summary>
            Sets a specific named context value.
            </summary>
            <param name="name">The context value name.</param>
            <param name="flags">Reserved. This parameter must be 0.</param>
            <param name="value">The named context value.</param>
            <returns>A value that gives information about the status of an operation</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemContext.GetValue(System.String,System.UInt32,System.Object@)">
            <summary>
            Retrieves the names of all of the context values available.
            </summary>
            <param name="name">Name for which the value is to be retrieved.</param>
            <param name="flags">Reserved. This parameter must be 0.</param>
            <param name="value">The context value.</param>
            <returns>A value that gives information about the status of an operation</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemContext.DeleteValue(System.String,System.UInt32)">
            <summary>
            Removes the specified context value.
            </summary>
            <param name="name">The named context value to delete.</param>
            <param name="flags">Reserved. This parameter must be 0.</param>
            <returns>A value that gives information about the status of an operation</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemContext.DeleteAll">
            <summary>
            Removes all context values, emptying the <see cref="T:WmiLight.Wbem.IWbemContext"/> object.
            </summary>
            <returns>A value that gives information about the status of an operation</returns>
        </member>
        <member name="T:WmiLight.Wbem.IWbemLocator">
            <summary>
            Use the <see cref="T:WmiLight.Wbem.IWbemLocator"/> interface to obtain the initial namespace pointer to the <see cref="T:WmiLight.Wbem.IWbemServices"/> interface for WMI on a specific host computer. 
            You can access Windows Management itself using the <see cref="T:WmiLight.Wbem.IWbemServices"/> pointer, which is returned by the <see cref="M:WmiLight.Wbem.IWbemLocator.ConnectServer(System.String,System.String,System.String,System.String,WmiLight.Wbem.WbemConnectOption,System.String,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemServices@)"/> method.
            </summary>
        </member>
        <member name="M:WmiLight.Wbem.IWbemLocator.ConnectServer(System.String,System.String,System.String,System.String,WmiLight.Wbem.WbemConnectOption,System.String,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemServices@)">
            <summary>
            Creates a connection through DCOM to a WMI namespace on the computer specified in the <paramref name="networkResource"/> parameter.
            </summary>
            <param name="networkResource">
            The object path of the correct WMI namespace.
            <para/>
            For local access to the default namespace, use a simple object path: "root\default" or "\\.\root\default". 
            <para />
            For access to the default namespace on a remote computer using COM or Microsoft-compatible networking, include the computer name: "\\server\root\default". 
            </param>
            <param name="userName">
            The user name you need for a connection. A NULL value indicates the current security context. If the user name is from a domain different from the current domain, the string may contain the domain name and user name separated by a backslash.
            <para />
            The <paramref name="userName"/> parameter cannot be an empty string. Note that if the domain is specified in <paramref name="authority"/>, then it must not be specified here. Specifying the domain in both parameters results in an invalid parameter error.
            <para /> 
            You can use the user principal name (UPN) format, which is Username@DomainName to specify the <paramref name="userName"/>.
            <para />
            <para />
            Windows 2000 and Windows NT 4.0:  You cannot use the user principal name (UPN) format.
            </param>
            <param name="userPassword">The password you need for a connection. A NULL value indicates the current security context. A blank string "" specifies a valid zero-length password.</param>
            <param name="locale">
            If NULL, the current locale is used. If not NULL, this parameter must indicates the correct locale for information retrieval. 
            For Microsoft locale identifiers, the format of the string is "MS_xxx", where xxx is a string in hexadecimal form that indicates the Local Identification (LCID), for example, American English would appear as "MS_409". 
            If an invalid locale is specified, then the method returns <see cref="F:WmiLight.Wbem.WbemStatus.WBEM_E_INVALID_PARAMETER"/>.
            <para />
            <para />
            Windows 7:  If an invalid locale is specified, then the default locale of the server is used unless there is a server-supported locale provided by the user application.
            </param>
            <param name="wbemConnectOption">The connection flag.</param>
            <param name="authority">
            This parameter contains the name of the domain of the user to authenticate.
            <para />
            <paramref name="authority"/> can have the following values:
            <para />
            - blank: If you leave this parameter blank, NTLM authentication is used and the NTLM domain of the current user is used. If the domain is specified in <paramref name="userName"/>, 
            which is the recommended location, then it must not be specified here. Specifying the domain in both parameters results in an invalid parameter error.
            - Kerberos: &lt;principal name&lt; (Kerberos authentication is used and this parameter should contain a Kerberos principal name.)
            - NTLMDOMAIN: &lt;domain name&gt; (NT LAN Manager authentication is used and this parameter should contain an NTLM domain name.)
            </param>
            <param name="ctx">
            Typically, this is NULL. 
            Otherwise, this is an <see cref="T:WmiLight.Wbem.IWbemContext"/> object required by one or more dynamic class providers.
            The values in the context object must be specified in the documentation for the providers in question. 
            For more information about this parameter, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392303(v=vs.85).aspx"/>.
            </param>
            <param name="wbemServices">
            Receives an <see cref="T:WmiLight.Wbem.IWbemServices"/> object bound to the specified namespace. This pointer has a positive reference count. 
            This is set to NULL when there is an error.
            </param>
            <returns>A value that gives information about the status of an operation.</returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa391769(v=vs.85).aspx"/></remarks>
        </member>
        <member name="T:WmiLight.Wbem.IWbemServices">
            <summary>
            The <see cref="T:WmiLight.Wbem.IWbemServices"/> interface is used by clients and providers to access WMI services. 
            The interface is implemented by WMI and WMI providers, and is the primary WMI interface.
            </summary>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392093(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServices.OpenNamespace(System.String,System.Int32,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemServices@,WmiLight.Wbem.IWbemCallResult@)">
            <summary>
            Opens a specific child namespace for operations.
            </summary>
            <param name="targetNamespace">
            Path to the target namespace. For more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa389766(v=vs.85).aspx"/>. <para />
            This namespace can only be relative to the current namespace associated with the <see cref="T:WmiLight.Wbem.IWbemServices"/> interface. This parameter cannot be an absolute path or NULL.
            </param>
            <param name="flags">
            This parameter can be set to 0 to make this a synchronous call.
            To make this a semisynchronous call, set <paramref name="flags"/> to <see cref="F:WmiLight.Wbem.WbemClassObjectEnumeratorBehaviorOption.ReturnImmediately"/>, and this call will return immediately.
            </param>
            <param name="ctx">Reserved. This parameter must be NULL.</param>
            <param name="workingNamespace">
            Receives the object that represents the new namespace context. <para/>
            If this parameter is specified, then <paramref name="result"/> must be NULL.
            </param>
            <param name="result">
            Typically NULL. <para />
            If not NULL, then <paramref name="workingNamespace"/> must be NULL. <para />
            In this case, the parameter receives a pointer to a new <see cref="T:WmiLight.Wbem.IWbemCallResult"/> object. <para/>
            If the <paramref name="flags"/> parameter is set to <see cref="F:WmiLight.Wbem.WbemClassObjectEnumeratorBehaviorOption.ReturnImmediately"/> this call returns immediately. <para />
            Then the caller can periodically poll the <see cref="M:WmiLight.Wbem.IWbemCallResult.GetResultServices(System.Int32,WmiLight.Wbem.IWbemServices@)"/> method until the value for the requested namespace becomes available. <para />
            This parameter is set to NULL when there is an error and a new object is not returned.
            </param>
            <returns>A value that gives information about the status of an operation.</returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392112(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServices.CancelAsyncCall(WmiLight.Wbem.IWbemObjectSink)">
            <summary>
            Cancels a currently executing asynchronous call.
            </summary>
            <param name="sink">The <see cref="T:WmiLight.Wbem.IWbemObjectSink"/> implementation provided by the client to any of the asynchronous methods of <see cref="T:WmiLight.Wbem.IWbemServices"/>.</param>
            <returns>A value that gives information about the status of an operation.</returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392094(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServices.QueryObjectSink(System.Int32,WmiLight.Wbem.IWbemObjectSink@)">
            <summary>
            Allows a caller to obtain a notification handler sink.
            </summary>
            <param name="flags">Reserved. This parameter must be 0.</param>
            <param name="responseHandler">Receives the interface pointer to the notification handler.</param>
            <returns>A value that gives information about the status of an operation.</returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392117(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServices.GetObject(System.String,System.Int32,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemClassObject@,WmiLight.Wbem.IWbemCallResult@)">
            <summary>
            Retrieves an object — an instance or class definition.
            </summary>
            <param name="objectPath">Path of the object to retrieve. If this is NULL, an empty object is returned that can become a new class.</param>
            <param name="flags">The behavior of this method.</param>
            <param name="ctx">
            Typically NULL. <para />
            Otherwise, this is a pointer to an <see cref="T:WmiLight.Wbem.IWbemContext"/> object that may be used by the provider that is producing the requested class or instance. <para/>
            The values in the context object must be specified in the documentation for the provider in question. 
            </param>
            <param name="outObject">If not NULL, this receives the object, if it is found.</param>
            <param name="callResult">
            If NULL, this parameter is not used. <para/>
            If the <paramref name="flags"/> parameter contains <see cref="F:WmiLight.Wbem.WbemClassObjectEnumeratorBehaviorOption.ReturnImmediately"/>, this call returns immediately with <see cref="F:WmiLight.Wbem.WbemStatus.WBEM_S_NO_ERROR"/>. <para />
            The <paramref name="callResult"/> parameter receives a new <see cref="T:WmiLight.Wbem.IWbemCallResult"/> object, which can then be polled to obtain the result using the <see cref="M:WmiLight.Wbem.IWbemCallResult.GetCallStatus(System.Int32,WmiLight.HResult@)"/> method. <para/>
            The caller can call <see cref="M:WmiLight.Wbem.IWbemCallResult.GetResultObject(System.Int32,WmiLight.Wbem.IWbemClassObject@)"/> to retrieve the object when it becomes available.
            </param>
            <returns>A value that gives information about the status of an operation.</returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392109(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServices.GetObjectAsync(System.String,System.Int32,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemObjectSink)">
            <summary>
            Asynchronously retrieves an object — an instance or class definition.
            </summary>
            <param name="objectPath">
            Path of the object to retrieve. For an instance provider, <paramref name="objectPath"/> can be in the following format:<para />
                - Namespace:Class.Key = "Value" <para />
                - Namespace:Class = "Value" <para />
                - Namespace:Class.Key = "Value", Key2 = "Value2" <para />
            Specifying the namespace before the class is optional. Object paths without namespaces refer to instances in the current namespace. <para/>
            If necessary, you can substitute the single-quotation mark character (') for the double-quotation mark character (") to delimit the start and end of string property types.
            </param>
            <param name="flags">For more information, see<see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392110(v=vs.85).aspx"/></param>
            <param name="ctx">
            Typically NULL. <para />
            Otherwise, this is a pointer to an <see cref="T:WmiLight.Wbem.IWbemContext"/> object that can be used by the provider that produces the requested class or instance.<para />
            The values in the context object must be specified in the documentation for the provider in question.
            </param>
            <param name="responseHandler">
            The caller's implementation of <see cref="T:WmiLight.Wbem.IWbemObjectSink"/>. <para />
            This handler receives the requested object when it becomes available through the <see cref="M:WmiLight.Wbem.IWbemObjectSink.Indicate(System.Int32,WmiLight.Wbem.IWbemClassObject[])"/> method.
            </param>
            <returns>A value that gives information about the status of an operation.</returns>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServices.PutClass(WmiLight.Wbem.IWbemClassObject,System.Int32,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemCallResult@)">
            <summary>
            Creates or updates a class definition.
            </summary>
            <param name="wbemClassObject">Must point to a valid class definition.</param>
            <param name="flags">For more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392113(v=vs.85).aspx"/></param>
            <param name="ctx">
            Typically NULL. <para />
            Otherwise, this is a pointer to an <see cref="T:WmiLight.Wbem.IWbemContext"/> object that can be used by the provider that produces the requested class or instance.<para />
            The values in the context object must be specified in the documentation for the provider in question.
            </param>
            <param name="callResult">
            If NULL, this parameter is not used. <para/>
            If the <paramref name="flags"/> parameter contains <see cref="F:WmiLight.Wbem.WbemClassObjectEnumeratorBehaviorOption.ReturnImmediately"/>, this call returns immediately with <see cref="F:WmiLight.Wbem.WbemStatus.WBEM_S_NO_ERROR"/>. <para />
            The <paramref name="callResult"/> parameter receives a new <see cref="T:WmiLight.Wbem.IWbemCallResult"/> object, which can then be polled to obtain the result using the <see cref="M:WmiLight.Wbem.IWbemCallResult.GetCallStatus(System.Int32,WmiLight.HResult@)"/> method. <para/>
            The caller can call <see cref="M:WmiLight.Wbem.IWbemCallResult.GetResultObject(System.Int32,WmiLight.Wbem.IWbemClassObject@)"/> to retrieve the object when it becomes available.
            </param>
            <returns>A value that gives information about the status of an operation.</returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392113(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServices.PutClassAsync(WmiLight.Wbem.IWbemClassObject,System.Int32,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemObjectSink)">
            <summary>
            Asynchronously creates or updates a class definition.
            </summary>
            <param name="wbemClassObject">The object containing the class definition.</param>
            <param name="flags">For more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392114(v=vs.85).aspx"/></param>
            <param name="ctx">
            Typically NULL. <para />
            Otherwise, this is a pointer to an <see cref="T:WmiLight.Wbem.IWbemContext"/> object that can be used by the provider that produces the requested class or instance.<para />
            The values in the context object must be specified in the documentation for the provider in question.
            </param>
            <param name="responseHandler">
            The caller's implementation of <see cref="T:WmiLight.Wbem.IWbemObjectSink"/>. <para />
            This handler receives the requested object when it becomes available through the <see cref="M:WmiLight.Wbem.IWbemObjectSink.Indicate(System.Int32,WmiLight.Wbem.IWbemClassObject[])"/> method.
            </param>
            <returns>A value that gives information about the status of an operation.</returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392114(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServices.DeleteClass(System.String,System.Int32,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemCallResult@)">
            <summary>
            Deletes a class.
            </summary>
            <param name="className">Name of the class targeted for deletion.</param>
            <param name="flags">For more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392099(v=vs.85).aspx"/></param>
            <param name="ctx">
            Typically NULL. <para />
            Otherwise, this is a pointer to an <see cref="T:WmiLight.Wbem.IWbemContext"/> object that can be used by the provider that produces the requested class or instance.<para />
            The values in the context object must be specified in the documentation for the provider in question.
            </param>        
            <param name="callResult">
            If NULL, this parameter is not used. <para/>
            If the <paramref name="flags"/> parameter contains <see cref="F:WmiLight.Wbem.WbemClassObjectEnumeratorBehaviorOption.ReturnImmediately"/>, this call returns immediately with <see cref="F:WmiLight.Wbem.WbemStatus.WBEM_S_NO_ERROR"/>. <para />
            The <paramref name="callResult"/> parameter receives a new <see cref="T:WmiLight.Wbem.IWbemCallResult"/> object, which can then be polled to obtain the result using the <see cref="M:WmiLight.Wbem.IWbemCallResult.GetCallStatus(System.Int32,WmiLight.HResult@)"/> method. <para/>
            The caller can call <see cref="M:WmiLight.Wbem.IWbemCallResult.GetResultObject(System.Int32,WmiLight.Wbem.IWbemClassObject@)"/> to retrieve the object when it becomes available.
            </param>
            <returns>A value that gives information about the status of an operation.</returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392099(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServices.DeleteClassAsync(System.String,System.Int32,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemObjectSink)">
            <summary>
            Deletes a class and receives confirmation asynchronously.
            </summary>
            <param name="className">Name of the class targeted for deletion.</param>
            <param name="flags">For more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392100(v=vs.85).aspx"/></param>
            <param name="ctx">
            Typically NULL. <para />
            Otherwise, this is a pointer to an <see cref="T:WmiLight.Wbem.IWbemContext"/> object that can be used by the provider that produces the requested class or instance.<para />
            The values in the context object must be specified in the documentation for the provider in question.
            </param>
            <param name="responseHandler">
            The caller's implementation of <see cref="T:WmiLight.Wbem.IWbemObjectSink"/>. <para />
            This handler receives the requested object when it becomes available through the <see cref="M:WmiLight.Wbem.IWbemObjectSink.Indicate(System.Int32,WmiLight.Wbem.IWbemClassObject[])"/> method.
            </param>
            <returns>A value that gives information about the status of an operation.</returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392100(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServices.CreateClassEnum(System.String,System.Int32,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemClassObjectEnumerator@)">
            <summary>
            Creates a class enumerator.
            </summary>
            <param name="superclass">
            If not NULL or blank, specifies a parent class name. <para />
            Only classes that are subclasses of this class are returned in the enumerator. <para />
            For more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392095(v=vs.85).aspx"/>
            </param>
            <param name="flags">For more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392095(v=vs.85).aspx"/></param>
            <param name="ctx">
            Typically NULL. <para />
            Otherwise, this is a pointer to an <see cref="T:WmiLight.Wbem.IWbemContext"/> object that can be used by the provider that produces the requested class or instance.<para />
            The values in the context object must be specified in the documentation for the provider in question.
            </param>
            <param name="enumerator">The enumerator.</param>
            <returns>A value that gives information about the status of an operation.</returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392095(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServices.CreateClassEnumAsync(System.String,System.Int32,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemObjectSink)">
            <summary>
            Creates a class enumerator that executes asynchronously.
            </summary>
            <param name="superclass">
            If not NULL or blank, specifies a parent class name. <para />
            Only classes that are subclasses of this class are returned in the enumerator. <para />
            For more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392096(v=vs.85).aspx"/>
            </param>
            <param name="flags">For more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392096(v=vs.85).aspx"/></param>
            <param name="ctx">
            Typically NULL. <para />
            Otherwise, this is a pointer to an <see cref="T:WmiLight.Wbem.IWbemContext"/> object that can be used by the provider that produces the requested class or instance.<para />
            The values in the context object must be specified in the documentation for the provider in question.
            </param>
            <param name="responseHandler">
            The caller's implementation of <see cref="T:WmiLight.Wbem.IWbemObjectSink"/>. <para />
            This handler receives the requested object when it becomes available through the <see cref="M:WmiLight.Wbem.IWbemObjectSink.Indicate(System.Int32,WmiLight.Wbem.IWbemClassObject[])"/> method.
            </param>
            <returns>A value that gives information about the status of an operation.</returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392096(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServices.PutInstance(WmiLight.Wbem.IWbemClassObject,System.Int32,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemCallResult@)">
            <summary>
            Creates or updates an instance of a specific class.
            </summary>
            <param name="inst">The instance to be written.</param>
            <param name="flags">For more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392115(v=vs.85).aspx"/></param>
            <param name="ctx">
            Typically NULL. <para />
            Otherwise, this is a pointer to an <see cref="T:WmiLight.Wbem.IWbemContext"/> object that can be used by the provider that produces the requested class or instance.<para />
            The values in the context object must be specified in the documentation for the provider in question.
            </param>
            <param name="callResult">
            If NULL, this parameter is not used. <para/>
            If the <paramref name="flags"/> parameter contains <see cref="F:WmiLight.Wbem.WbemClassObjectEnumeratorBehaviorOption.ReturnImmediately"/>, this call returns immediately with <see cref="F:WmiLight.Wbem.WbemStatus.WBEM_S_NO_ERROR"/>. <para />
            The <paramref name="callResult"/> parameter receives a new <see cref="T:WmiLight.Wbem.IWbemCallResult"/> object, which can then be polled to obtain the result using the <see cref="M:WmiLight.Wbem.IWbemCallResult.GetCallStatus(System.Int32,WmiLight.HResult@)"/> method. <para/>
            The caller can call <see cref="M:WmiLight.Wbem.IWbemCallResult.GetResultObject(System.Int32,WmiLight.Wbem.IWbemClassObject@)"/> to retrieve the object when it becomes available.
            </param>
            <returns>A value that gives information about the status of an operation.</returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392115(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServices.PutInstanceAsync(WmiLight.Wbem.IWbemClassObject,System.Int32,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemObjectSink)">
            <summary>
            Asynchronously creates or updates an instance of a specific class.
            </summary>
            <param name="inst">The instance to be written.</param>
            <param name="flags">For more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392116(v=vs.85).aspx"/></param>
            <param name="ctx">
            Typically NULL. <para />
            Otherwise, this is a pointer to an <see cref="T:WmiLight.Wbem.IWbemContext"/> object that can be used by the provider that produces the requested class or instance.<para />
            The values in the context object must be specified in the documentation for the provider in question.
            </param>
            <param name="responseHandler">
            The caller's implementation of <see cref="T:WmiLight.Wbem.IWbemObjectSink"/>. <para />
            This handler receives the requested object when it becomes available through the <see cref="M:WmiLight.Wbem.IWbemObjectSink.Indicate(System.Int32,WmiLight.Wbem.IWbemClassObject[])"/> method.
            </param>
            <returns>A value that gives information about the status of an operation.</returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392116(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServices.DeleteInstance(System.String,System.Int32,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemCallResult@)">
            <summary>
            Deletes a specific instance of a class.
            </summary>
            <param name="objectPath">The object path to the instance to be deleted.</param>
            <param name="flags">For more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392101(v=vs.85).aspx"/></param>
            <param name="ctx">
            Typically NULL. <para />
            Otherwise, this is a pointer to an <see cref="T:WmiLight.Wbem.IWbemContext"/> object that can be used by the provider that produces the requested class or instance.<para />
            The values in the context object must be specified in the documentation for the provider in question.
            </param>
            <param name="callResult">
            If NULL, this parameter is not used. <para/>
            If the <paramref name="flags"/> parameter contains <see cref="F:WmiLight.Wbem.WbemClassObjectEnumeratorBehaviorOption.ReturnImmediately"/>, this call returns immediately with <see cref="F:WmiLight.Wbem.WbemStatus.WBEM_S_NO_ERROR"/>. <para />
            The <paramref name="callResult"/> parameter receives a new <see cref="T:WmiLight.Wbem.IWbemCallResult"/> object, which can then be polled to obtain the result using the <see cref="M:WmiLight.Wbem.IWbemCallResult.GetCallStatus(System.Int32,WmiLight.HResult@)"/> method. <para/>
            The caller can call <see cref="M:WmiLight.Wbem.IWbemCallResult.GetResultObject(System.Int32,WmiLight.Wbem.IWbemClassObject@)"/> to retrieve the object when it becomes available.
            </param>
            <returns>A value that gives information about the status of an operation.</returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392101(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServices.DeleteInstanceAsync(System.String,System.Int32,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemObjectSink)">
            <summary>
            Deletes an instance and provides confirmation asynchronously.
            </summary>
            <param name="objectPath">The object path to the instance to be deleted.</param>
            <param name="flags">For more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392102(v=vs.85).aspx"/></param>
            <param name="ctx">
            Typically NULL. <para />
            Otherwise, this is a pointer to an <see cref="T:WmiLight.Wbem.IWbemContext"/> object that can be used by the provider that produces the requested class or instance.<para />
            The values in the context object must be specified in the documentation for the provider in question.
            </param>
            <param name="responseHandler">
            The caller's implementation of <see cref="T:WmiLight.Wbem.IWbemObjectSink"/>. <para />
            This handler receives the requested object when it becomes available through the <see cref="M:WmiLight.Wbem.IWbemObjectSink.Indicate(System.Int32,WmiLight.Wbem.IWbemClassObject[])"/> method.
            </param>
            <returns>A value that gives information about the status of an operation.</returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392102(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServices.CreateInstanceEnum(System.String,System.Int32,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemClassObjectEnumerator@)">
            <summary>
            Creates an instance enumerator.
            </summary>
            <param name="filter">The name of the class for which instances are desired.</param>
            <param name="flags">For more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392097(v=vs.85).aspx"/></param>
            <param name="ctx">
            Typically NULL. <para />
            Otherwise, this is a pointer to an <see cref="T:WmiLight.Wbem.IWbemContext"/> object that can be used by the provider that produces the requested class or instance.<para />
            The values in the context object must be specified in the documentation for the provider in question.
            </param>
            <param name="enumerator">The enumerator.</param>
            <returns>A value that gives information about the status of an operation.</returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392097(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServices.CreateInstanceEnumAsync(System.String,System.Int32,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemObjectSink)">
            <summary>
            Creates an instance enumerator that executes asynchronously.
            </summary>
            <param name="filter">The name of the class for which instances are desired.</param>
            <param name="flags">For more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392098(v=vs.85).aspx"/></param>
            <param name="ctx">
            Typically NULL. <para />
            Otherwise, this is a pointer to an <see cref="T:WmiLight.Wbem.IWbemContext"/> object that can be used by the provider that produces the requested class or instance.<para />
            The values in the context object must be specified in the documentation for the provider in question.
            </param>
            <param name="responseHandler">
            The caller's implementation of <see cref="T:WmiLight.Wbem.IWbemObjectSink"/>. <para />
            This handler receives the requested object when it becomes available through the <see cref="M:WmiLight.Wbem.IWbemObjectSink.Indicate(System.Int32,WmiLight.Wbem.IWbemClassObject[])"/> method.
            </param>
            <returns>A value that gives information about the status of an operation.</returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392098(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServices.ExecQuery(System.String,System.String,WmiLight.Wbem.WbemClassObjectEnumeratorBehaviorOption,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemClassObjectEnumerator@)">
            <summary>
            Executes a query to retrieve classes or instances.
            </summary>
            <param name="queryLanguage">This must be "WQL", the acronym for WMI Query Language.</param>
            <param name="query">The text of the query.</param>
            <param name="behaviorOption">For more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392107(v=vs.85).aspx"/></param>
            <param name="ctx">
            Typically NULL. <para />
            Otherwise, this is a pointer to an <see cref="T:WmiLight.Wbem.IWbemContext"/> object that can be used by the provider that produces the requested class or instance.<para />
            The values in the context object must be specified in the documentation for the provider in question.
            </param>
            <param name="enumerator">The enumerator.</param>
            <returns>A value that gives information about the status of an operation.</returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392107(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServices.ExecQueryAsync(System.String,System.String,WmiLight.Wbem.WbemClassObjectEnumeratorBehaviorOption,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemObjectSink)">
            <summary>
            Executes a query to retrieve classes or instances asynchronously.
            </summary>
            <param name="queryLanguage">This must be "WQL", the acronym for WMI Query Language.</param>
            <param name="query">The text of the query.</param>
            <param name="behaviorOption">For more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392108(v=vs.85).aspx"/></param>
            <param name="ctx">
            Typically NULL. <para />
            Otherwise, this is a pointer to an <see cref="T:WmiLight.Wbem.IWbemContext"/> object that can be used by the provider that produces the requested class or instance.<para />
            The values in the context object must be specified in the documentation for the provider in question.
            </param>
            <param name="responseHandler">
            The caller's implementation of <see cref="T:WmiLight.Wbem.IWbemObjectSink"/>. <para />
            This handler receives the requested object when it becomes available through the <see cref="M:WmiLight.Wbem.IWbemObjectSink.Indicate(System.Int32,WmiLight.Wbem.IWbemClassObject[])"/> method.
            </param>
            <returns>A value that gives information about the status of an operation.</returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392108(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServices.ExecNotificationQuery(System.String,System.String,WmiLight.Wbem.WbemClassObjectEnumeratorBehaviorOption,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemClassObjectEnumerator@)">
            <summary>
            Executes a query to receive events.
            </summary>
            <param name="queryLanguage">This must be "WQL", the acronym for WMI Query Language.</param>
            <param name="query">The text of the query.</param>
            <param name="behaviorOption">For more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392105(v=vs.85).aspx"/></param>
            <param name="ctx">
            Typically NULL. <para />
            Otherwise, this is a pointer to an <see cref="T:WmiLight.Wbem.IWbemContext"/> object that can be used by the provider that produces the requested class or instance.<para />
            The values in the context object must be specified in the documentation for the provider in question.
            </param>
            <param name="enumerator">The enumerator.</param>
            <returns>A value that gives information about the status of an operation.</returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392105(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServices.ExecNotificationQueryAsync(System.String,System.String,WmiLight.Wbem.WbemClassObjectEnumeratorBehaviorOption,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemObjectSink)">
            <summary>
            Executes a query to receive events asynchronously.
            </summary>
            <param name="queryLanguage">This must be "WQL", the acronym for WMI Query Language.</param>
            <param name="query">The text of the query.</param>
            <param name="behaviorOption">For more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392106(v=vs.85).aspx"/></param>
            <param name="ctx">
            Typically NULL. <para />
            Otherwise, this is a pointer to an <see cref="T:WmiLight.Wbem.IWbemContext"/> object that can be used by the provider that produces the requested class or instance.<para />
            The values in the context object must be specified in the documentation for the provider in question.
            </param>
            <param name="responseHandler">
            The caller's implementation of <see cref="T:WmiLight.Wbem.IWbemObjectSink"/>. <para />
            This handler receives the requested object when it becomes available through the <see cref="M:WmiLight.Wbem.IWbemObjectSink.Indicate(System.Int32,WmiLight.Wbem.IWbemClassObject[])"/> method.
            </param>
            <returns>A value that gives information about the status of an operation.</returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392106(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServices.ExecMethod(System.String,System.String,System.Int32,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemClassObject,WmiLight.Wbem.IWbemClassObject@,WmiLight.Wbem.IWbemCallResult@)">
            <summary>
            Executes an object method.
            </summary>
            <param name="objectPath">The object path of the object for which the method is executed.</param>
            <param name="methodName">Name of the method for the object.</param>
            <param name="flags">For more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392103(v=vs.85).aspx"/></param>
            <param name="ctx">
            Typically NULL. <para />
            Otherwise, this is a pointer to an <see cref="T:WmiLight.Wbem.IWbemContext"/> object that can be used by the provider that produces the requested class or instance.<para />
            The values in the context object must be specified in the documentation for the provider in question.
            </param>
            <param name="inParams">
            Can be NULL if no inbound parameters are required to execute the method.<para />
            Otherwise, this points to an <see cref="T:WmiLight.Wbem.IWbemClassObject"/> object that contains the properties acting as inbound parameters for the method execution. 
            </param>
            <param name="outParams">
            If not NULL, receives the outbound parameters and return values for the method execution.<para />
            The contents of this object are method-specific, and are part of the specification for the provider in question.
            </param>
            <param name="callResult">
            If NULL, this parameter is not used. <para/>
            If the <paramref name="flags"/> parameter contains <see cref="F:WmiLight.Wbem.WbemClassObjectEnumeratorBehaviorOption.ReturnImmediately"/>, this call returns immediately with <see cref="F:WmiLight.Wbem.WbemStatus.WBEM_S_NO_ERROR"/>. <para />
            The <paramref name="callResult"/> parameter receives a new <see cref="T:WmiLight.Wbem.IWbemCallResult"/> object, which can then be polled to obtain the result using the <see cref="M:WmiLight.Wbem.IWbemCallResult.GetCallStatus(System.Int32,WmiLight.HResult@)"/> method. <para/>
            The caller can call <see cref="M:WmiLight.Wbem.IWbemCallResult.GetResultObject(System.Int32,WmiLight.Wbem.IWbemClassObject@)"/> to retrieve the object when it becomes available.
            </param>
            <returns>A value that gives information about the status of an operation.</returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392103(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.Wbem.IWbemServices.ExecMethodAsync(System.String,System.String,System.Int32,WmiLight.Wbem.IWbemContext,WmiLight.Wbem.IWbemClassObject,WmiLight.Wbem.IWbemObjectSink)">
            <summary>
            Executes an object method asynchronously.
            </summary>
            <param name="objectPath">The object path of the object for which the method is executed.</param>
            <param name="methodName">Name of the method for the object.</param>
            <param name="flags">For more information, see <see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392104(v=vs.85).aspx"/></param>
            <param name="ctx">
            Typically NULL. <para />
            Otherwise, this is a pointer to an <see cref="T:WmiLight.Wbem.IWbemContext"/> object that can be used by the provider that produces the requested class or instance.<para />
            The values in the context object must be specified in the documentation for the provider in question.
            </param>
            <param name="inParams">
            Can be NULL if no inbound parameters are required to execute the method. <para />
            Otherwise, this points to an <see cref="T:WmiLight.Wbem.IWbemClassObject"/> object that contains the properties acting as inbound parameters for the method execution. 
            </param>
            <param name="responseHandler">
            The caller's implementation of <see cref="T:WmiLight.Wbem.IWbemObjectSink"/>. <para />
            This handler receives the requested object when it becomes available through the <see cref="M:WmiLight.Wbem.IWbemObjectSink.Indicate(System.Int32,WmiLight.Wbem.IWbemClassObject[])"/> method.
            </param>
            <returns>A value that gives information about the status of an operation.</returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/aa392104(v=vs.85).aspx"/></remarks>
        </member>
        <member name="T:WmiLight.Wbem.WbemChangeMode">
            <summary>
            The <see cref="T:WmiLight.Wbem.WbemChangeMode"/> enumeration is used to indicate and update the type of the flag.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemChangeMode.CreateOrUpdate">
            <summary>
            This flag causes the put operation to update the class or instance if it does not exist, 
            or to overwrite the class or instance if it exists already.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemChangeMode.Update">
            <summary>
            This flag causes the put operation to update the class or instance. The class or instance MUST exist for the call to be successful.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemChangeMode.Create">
            <summary>
            This flag causes the put operation to create the class or instance. For the call to be successful, the class or instance MUST NOT exist.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemChangeMode.SafeUpdate">
            <summary>
            This flag allows updates of classes even if there are child classes, as long as the change does not cause any conflicts with child classes. An example of an update that this flag allows is the adding of a new property to the base class that was not previously mentioned in any of the child classes. If the class has instances, the update fails.
            </summary>
        </member>
        <member name="F:WmiLight.Wbem.WbemChangeMode.ForceUpdate">
            <summary>
            This flag forces updates of classes when conflicting child classes exist. An example of an update that this flag forces is when a class qualifier is defined in a child class and the base class tries to add the same qualifier that conflicted with the existing one. In force mode, this conflict is resolved by deleting the conflicting qualifier in the child class.
            </summary>
        </member>
        <member name="T:WmiLight.WmiException">
            <summary>
            The exception that is thrown when a WMI error occurs.
            </summary>
        </member>
        <member name="M:WmiLight.WmiException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WmiLight.WmiException"/> class.
            </summary>
            <param name="message">The error message string.</param>
        </member>
        <member name="M:WmiLight.WmiException.#ctor(WmiLight.HResultInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:WmiLight.WmiException"/> class.
            </summary>
            <param name="hresultInfo">The <see cref="T:WmiLight.HResultInfo"/>.</param>
        </member>
        <member name="M:WmiLight.WmiException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:WmiLight.WmiException"/> class.
            </summary>
            <param name="message">The error message string.</param>
            <param name="innerException">The inner exception reference.</param>
        </member>
        <member name="P:WmiLight.WmiException.HResult">
            <summary>
            Gets or sets the <see cref="P:WmiLight.WmiException.HResult"/>, a coded numerical value that is assigned to a specific exception.
            </summary>
        </member>
        <member name="T:WmiLight.WmiConnection">
            <summary>
            Represents a connection to the WMI-provider of a computer.
            </summary>
        </member>
        <member name="F:WmiLight.WmiConnection.DefaultPath">
            <summary>
            The default value of the <see cref="F:WmiLight.WmiConnection.path" />-field.
            </summary>
        </member>
        <member name="F:WmiLight.WmiConnection.connectLockObject">
            <summary>
            The lock object to sync the connect process.
            </summary>
        </member>
        <member name="F:WmiLight.WmiConnection.credential">
            <summary>
            The credential to make a remote connection.
            </summary>
        </member>
        <member name="F:WmiLight.WmiConnection.path">
            <summary>
            The object path of the correct WMI namespace.
            </summary>
        </member>
        <member name="F:WmiLight.WmiConnection.options">
            <summary>
            All settings to make the WMI connection.
            </summary>
        </member>
        <member name="F:WmiLight.WmiConnection.isDisposed">
            <summary>
            true if the instance is already disposed, otherwise false.
            </summary>
        </member>
        <member name="F:WmiLight.WmiConnection.isConnected">
            <summary>
            true if the <see cref="T:WmiLight.Wbem.IWbemServices"/> is connected, otherwise false.
            </summary>
        </member>
        <member name="F:WmiLight.WmiConnection.ignoreCredential">
            <summary>
            true if the credential will be ignored, otherwise false.
            </summary>
        </member>
        <member name="F:WmiLight.WmiConnection.wbemServices">
            <summary>
            The native <see cref="T:WmiLight.Wbem.IWbemServices"/> object.
            </summary>
        </member>
        <member name="F:WmiLight.WmiConnection.context">
            <summary>
            The native <see cref="T:WmiLight.Wbem.IWbemContext"/> object.
            </summary>
        </member>
        <member name="M:WmiLight.WmiConnection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WmiLight.WmiConnection"/> class.
            </summary>
        </member>
        <member name="M:WmiLight.WmiConnection.#ctor(WmiLight.WmiConnectionOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:WmiLight.WmiConnection"/> class.
            </summary>
            <param name="options">Specifies all settings required to make a WMI connection.</param>
        </member>
        <member name="M:WmiLight.WmiConnection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WmiLight.WmiConnection"/> class.
            </summary>
            <param name="path">
            The object path of the correct WMI namespace.
            <para/>
            For local access to the default namespace, use a simple object path: "root\default" or "\\.\root\default". 
            <para />
            For access to the default namespace on a remote computer using COM or Microsoft-compatible networking, include the computer name: "\\server\root\default". 
            </param>
        </member>
        <member name="M:WmiLight.WmiConnection.#ctor(System.String,WmiLight.WmiConnectionOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:WmiLight.WmiConnection"/> class.
            </summary>
            <param name="path">
            The object path of the correct WMI namespace.
            <para/>
            For local access to the default namespace, use a simple object path: "root\default" or "\\.\root\default". 
            <para />
            For access to the default namespace on a remote computer using COM or Microsoft-compatible networking, include the computer name: "\\server\root\default". 
            </param>
            <param name="options">Specifies all settings required to make a WMI connection.</param>
        </member>
        <member name="M:WmiLight.WmiConnection.#ctor(System.String,System.Net.NetworkCredential)">
            <summary>
            Initializes a new instance of the <see cref="T:WmiLight.WmiConnection"/> class.
            </summary>
            <param name="path">
            The object path of the correct WMI namespace.
            <para/>
            For local access to the default namespace, use a simple object path: "root\default" or "\\.\root\default". 
            <para />
            For access to the default namespace on a remote computer using COM or Microsoft-compatible networking, include the computer name: "\\server\root\default". 
            </param>
            <param name="credential">The credential to make a remote connection.</param>
        </member>
        <member name="M:WmiLight.WmiConnection.#ctor(System.String,System.Net.NetworkCredential,WmiLight.WmiConnectionOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:WmiLight.WmiConnection"/> class.
            </summary>
            <param name="path">
            The object path of the correct WMI namespace.
            <para/>
            For local access to the default namespace, use a simple object path: "root\default" or "\\.\root\default". 
            <para />
            For access to the default namespace on a remote computer using COM or Microsoft-compatible networking, include the computer name: "\\server\root\default". 
            </param>
            <param name="credential">The credential to make a remote connection.</param>
            <param name="options">Specifies all settings required to make a WMI connection.</param>
        </member>
        <member name="P:WmiLight.WmiConnection.IsConnected">
            <summary>
            Gets a value indicating whether the connection is currently bound to a WMI server and namespace.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Object already disposed.</exception>
        </member>
        <member name="P:WmiLight.WmiConnection.Authority">
            <summary>
            Gets the Authority for a remote connection.
            </summary>
        </member>
        <member name="P:WmiLight.WmiConnection.IsRemote">
            <summary>
            Gets a value indicating whether the configuration is remote.
            </summary>
        </member>
        <member name="M:WmiLight.WmiConnection.Open">
            <summary>
            Establishes a connection to the WMI server and namespace.
            </summary>
        </member>
        <member name="M:WmiLight.WmiConnection.Close">
            <summary>
            Closes the connection and allows reuse of the connection.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Object already disposed.</exception>
        </member>
        <member name="M:WmiLight.WmiConnection.CreateQuery(System.String)">
            <summary>
            Creates a <see cref="T:WmiLight.WmiQuery"/> for the given <see cref="T:System.String"/>.
            </summary>
            <param name="wql">The query.</param>
            <returns>The created <see cref="T:WmiLight.WmiQuery"/>.</returns>
        </member>
        <member name="M:WmiLight.WmiConnection.ExecuteQuery(System.String)">
            <summary>
            Executes a query to retrieve objects.
            </summary>
            <param name="query">The query which will be executed.</param>
            <returns>An object collection that contains the result set of the query.</returns>
            <exception cref="T:System.ObjectDisposedException">Object already disposed.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="query"/> is null.</exception>
        </member>
        <member name="M:WmiLight.WmiConnection.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:WmiLight.WmiConnection"/>.
            </summary>
        </member>
        <member name="M:WmiLight.WmiConnection.InternalExecuteQuery(System.String,WmiLight.Wbem.WbemClassObjectEnumeratorBehaviorOption)">
            <summary>
            Executes a query to retrieve objects.
            </summary>
            <param name="query">The query which will be executed.</param>
            <param name="behaviorOption">The flag to influence the behavior of the enumerator.</param>
            <returns>An object collection that contains the result set of the query.</returns>
            <exception cref="T:System.ObjectDisposedException">Object already disposed.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="query"/> is null.</exception>
        </member>
        <member name="T:WmiLight.WmiConnectionOptions">
            <summary>
            Specifies all settings required to make a WMI connection.
            </summary>
        </member>
        <member name="P:WmiLight.WmiConnectionOptions.AuthenticationProtocol">
            <summary>
            Gets or sets the mode of authentication.
            </summary>
        </member>
        <member name="P:WmiLight.WmiConnectionOptions.EnablePackageEncryption">
            <summary>
            Gets or sets a value indicating whether the packages will be encrypted.
            </summary>
        </member>
        <member name="T:WmiLight.NativeMethods">
            <summary>
            The class to call the native COM functions of the C++ library.
            </summary>
        </member>
        <member name="F:WmiLight.NativeMethods.CoSetProxyBlanketForIWbemServices">
            <summary>
            Sets the authentication information that will be used to make calls on the specified proxy.
            </summary>
        </member>
        <member name="F:WmiLight.NativeMethods.CoSetProxyBlanketForIWbemClassObjectEnumerator">
            <summary>
            Sets the authentication information that will be used to make calls on the specified proxy.
            </summary>
        </member>
        <member name="F:WmiLight.NativeMethods.ExecQueryWmi">
            <summary>
            Sets the authentication information and executes a query to retrieve objects.
            </summary>
        </member>
        <member name="F:WmiLight.NativeMethods.UnmanagedWmiLibraryDllName">
            <summary>
            The name of the native COM DLL.
            </summary>
        </member>
        <member name="M:WmiLight.NativeMethods.#cctor">
            <summary>
            Initializes static members of the <see cref="T:WmiLight.NativeMethods" /> class.
            </summary>
        </member>
        <member name="T:WmiLight.NativeMethods.CoSetProxyBlanketForIWbemServicesFunction">
            <summary>
            The function to set the authentication information for a <see cref="T:WmiLight.Wbem.IWbemServices"/> object.
            </summary>
            <param name="wbemServices">The <see cref="T:WmiLight.Wbem.IWbemServices"/> object which will by wrapped with a proxy.</param>
            <param name="userName">The name of the user.</param>
            <param name="password">The password of the user.</param>
            <param name="authority">
            The authority to be used to authenticate the specified user.
            <para />
            Example: "ntlmdomain:MYDOMAIN"
            </param>
            <param name="impersonationLevel">The impersonation level which will be used.</param>
            <param name="authenticationLevel">The authentication level which will be used.</param>
            <returns>A coded numerical value that is assigned to a specific exception.</returns>
        </member>
        <member name="T:WmiLight.NativeMethods.CoSetProxyBlanketForIWbemClassObjectEnumeratorFunction">
            <summary>
            The function to set the authentication information for a <see cref="T:WmiLight.Wbem.IWbemClassObjectEnumerator"/> object.
            </summary>
            <param name="wbemClassObjectEnumerator">The <see cref="T:WmiLight.Wbem.IWbemClassObjectEnumerator"/> object which will by wrapped with a proxy.</param>
            <param name="userName">The name of the user.</param>
            <param name="password">The password of the user.</param>
            <param name="authority">
            The authority to be used to authenticate the specified user.
            <para />
            Example: "ntlmdomain:MYDOMAIN"
            </param>
            <param name="impersonationLevel">The impersonation level which will be used.</param>
            <param name="authenticationLevel">The authentication level which will be used.</param>
            <returns>A coded numerical value that is assigned to a specific exception.</returns>
        </member>
        <member name="T:WmiLight.NativeMethods.ExecQueryFunction">
            <summary>
            Sets the authentication information and executes a query to retrieve objects.
            </summary>
            <param name="queryLanguage">
            The query language. 
            <para />
            Typically, this is WQL. 
            </param>
            <param name="query">The query which will be executed.</param>
            <param name="enumeratorBehaviorOption">Flag for the behavior of the created enumerator.</param>
            <param name="ctx">
            Typically, this is NULL. 
            Otherwise, this is an <see cref="T:WmiLight.Wbem.IWbemContext"/> object required by one or more dynamic class providers.
            </param>
            <param name="enumerator">The enumerator for the results of the query.</param>
            <param name="impersonationLevel">The impersonation level which will be used.</param>
            <param name="authenticationLevel">The authentication level which will be used.</param>
            <param name="wbemService">The <see cref="T:WmiLight.Wbem.IWbemServices" /> object./></param>
            <param name="userName">The name of the user.</param>
            <param name="password">The password of the user.</param>
            <param name="authority">
            The authority to be used to authenticate the specified user.
            <para />
            Example: "ntlmdomain:MYDOMAIN"
            </param>
            <returns>A coded numerical value that is assigned to a specific exception.</returns>
        </member>
        <member name="M:WmiLight.NativeMethods.LoadLibrary(System.String)">
            <summary>
            Loads the specified module into the address space of the calling process. The specified module may cause other modules to be loaded.
            </summary>
            <param name="fileName">
            The name of the module. 
            This can be either a library module (a .dll file) or an executable module (an .exe file). 
            The name specified is the file name of the module and is not related to the name stored in the library module itself, 
            as specified by the LIBRARY keyword in the module-definition (.def) file.
            </param>
            <returns>
            If the function succeeds, the return value is a handle to the module.
            If the function fails, the return value is NULL.
            </returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/ms684175(v=vs.85).aspx"/></remarks>
        </member>
        <member name="M:WmiLight.NativeMethods.GetProcAddress(System.IntPtr,System.String)">
            <summary>
            Retrieves the address of an exported function or variable from the specified dynamic-link library (DLL).
            </summary>
            <param name="hModule">A handle to the DLL module that contains the function or variable. </param>
            <param name="procname">
            The function or variable name, or the function's ordinal value. If this parameter is an ordinal value, it must be in the low-order word; the high-order word must be zero.
            </param>
            <returns>
            If the function succeeds, the return value is the address of the exported function or variable.
            If the function fails, the return value is NULL.
            </returns>
            <remarks><see url="http://msdn.microsoft.com/en-us/library/windows/desktop/ms683212(v=vs.85).aspx"/></remarks>
        </member>
        <member name="T:WmiLight.WmiObject">
            <summary>
            Contains and manipulates both class definitions and class object instances.
            </summary>
        </member>
        <member name="F:WmiLight.WmiObject.GenusPropertyName">
            <summary>
            The property key for the <see cref="P:WmiLight.WmiObject.Genus"/> property.
            </summary>
        </member>
        <member name="F:WmiLight.WmiObject.ClassPropertyName">
            <summary>
            The property key for the <see cref="P:WmiLight.WmiObject.Class"/> property.
            </summary>
        </member>
        <member name="F:WmiLight.WmiObject.SuperClassPropertyName">
            <summary>
            The property key for the <see cref="P:WmiLight.WmiObject.SuperClass"/> property.
            </summary>
        </member>
        <member name="F:WmiLight.WmiObject.DynastyPropertyName">
            <summary>
            The property key for the <see cref="P:WmiLight.WmiObject.Dynasty"/> property.
            </summary>
        </member>
        <member name="F:WmiLight.WmiObject.RelpathPropertyName">
            <summary>
            The property key for the <see cref="P:WmiLight.WmiObject.Relpath"/> property.
            </summary>
        </member>
        <member name="F:WmiLight.WmiObject.PropertyCountPropertyName">
            <summary>
            The property key for the <see cref="P:WmiLight.WmiObject.PropertyCount"/> property.
            </summary>
        </member>
        <member name="F:WmiLight.WmiObject.DerivationPropertyName">
            <summary>
            The property key for the <see cref="P:WmiLight.WmiObject.Derivation"/> property.
            </summary>
        </member>
        <member name="F:WmiLight.WmiObject.ServerPropertyName">
            <summary>
            The property key for the <see cref="P:WmiLight.WmiObject.Server"/> property.
            </summary>
        </member>
        <member name="F:WmiLight.WmiObject.NamespacePropertyName">
            <summary>
            The property key for the <see cref="P:WmiLight.WmiObject.Namespace"/> property.
            </summary>
        </member>
        <member name="F:WmiLight.WmiObject.PathPropertyName">
            <summary>
            The property key for the <see cref="P:WmiLight.WmiObject.Path"/> property.
            </summary>
        </member>
        <member name="F:WmiLight.WmiObject.wbemClassObject">
            <summary>
            The native <see cref="T:WmiLight.Wbem.IWbemClassObject"/> object.
            </summary>
        </member>
        <member name="F:WmiLight.WmiObject.disposed">
            <summary>
            true if the instance is already disposed, otherwise false.
            </summary>
        </member>
        <member name="M:WmiLight.WmiObject.#ctor(WmiLight.Wbem.IWbemClassObject)">
            <summary>
            Initializes a new instance of the <see cref="T:WmiLight.WmiObject"/> class.
            </summary>
            <param name="wmiObject">The native <see cref="T:WmiLight.Wbem.IWbemClassObject"/> object.</param>
        </member>
        <member name="P:WmiLight.WmiObject.Genus">
            <summary>
            Gets the value that is used to distinguish between classes and instances.
            </summary>
        </member>
        <member name="P:WmiLight.WmiObject.Class">
            <summary>
            Gets the Class name.
            </summary>
        </member>
        <member name="P:WmiLight.WmiObject.SuperClass">
            <summary>
            Gets the name of the immediate parent class of the class or instance.
            </summary>
        </member>
        <member name="P:WmiLight.WmiObject.Dynasty">
            <summary>
            Gets the name of the top-level class from which the class or instance is derived. <para />
            When this class or instance is the top-level class, the values of <see cref="P:WmiLight.WmiObject.Dynasty"/> property and the <see cref="P:WmiLight.WmiObject.Class"/> property are the same.
            </summary>
        </member>
        <member name="P:WmiLight.WmiObject.Relpath">
            <summary>
            Gets the relative path to the class or instance.
            </summary>
        </member>
        <member name="P:WmiLight.WmiObject.PropertyCount">
            <summary>
            Gets the number of nonsystem properties defined for the class or instance.
            </summary>
        </member>
        <member name="P:WmiLight.WmiObject.Derivation">
            <summary>
            Gets the class hierarchy of the current class or instance. <para />
            The first element is the immediate parent class, the next is its parent, and so on; the last element is the base class.
            </summary>
        </member>
        <member name="P:WmiLight.WmiObject.Server">
            <summary>
            Gets the name of the server supplying the class or instance.
            </summary>
        </member>
        <member name="P:WmiLight.WmiObject.Namespace">
            <summary>
            Gets the name of the namespace of the class or instance.
            </summary>
        </member>
        <member name="P:WmiLight.WmiObject.Path">
            <summary>
            Gets the full path to the class or instance—including server and namespace.
            </summary>
        </member>
        <member name="P:WmiLight.WmiObject.DebuggerFakeFields">
            <summary>
            Gets the faked fields for the debugger view.
            </summary>
        </member>
        <member name="P:WmiLight.WmiObject.Item(System.String)">
            <summary>
            Gets a particular property value.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <returns>The particular property value.</returns>
        </member>
        <member name="M:WmiLight.WmiObject.GetPropertyNames">
            <summary>
            Gets the names of all properties in the object.
            </summary>
            <returns>The names of all properties.</returns>
        </member>
        <member name="M:WmiLight.WmiObject.GetPropertyValue(System.String)">
            <summary>
            Gets a particular property value.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <returns>The particular property value.</returns>
        </member>
        <member name="M:WmiLight.WmiObject.GetPropertyValue``1(System.String)">
            <summary>
            Gets a particular property value.
            </summary>
            <typeparam name="TResult">The result type.</typeparam>
            <param name="propertyName">The name of the property.</param>
            <returns>The particular property value.</returns>
        </member>
        <member name="M:WmiLight.WmiObject.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:WmiLight.WmiObject"/>.
            </summary>
        </member>
        <member name="M:WmiLight.WmiObject.ToString">
            <summary>
            Returns a string that represents the current <see cref="T:WmiLight.WmiObject"/>.
            </summary>
            <returns>A string that represents the current <see cref="T:WmiLight.WmiObject"/>.</returns>
        </member>
        <member name="T:WmiLight.WmiObjectEnumerator">
            <summary>
            Represents a collection of <see cref="T:WmiLight.WmiObject"/>s.
            </summary>
        </member>
        <member name="F:WmiLight.WmiObjectEnumerator.wbemClassObjectEnumerator">
            <summary>
            The native <see cref="T:WmiLight.Wbem.IWbemClassObjectEnumerator"/> object.
            </summary>
        </member>
        <member name="F:WmiLight.WmiObjectEnumerator.disposed">
            <summary>
            true if the instance is already disposed, otherwise false.
            </summary>
        </member>
        <member name="M:WmiLight.WmiObjectEnumerator.#ctor(WmiLight.Wbem.IWbemClassObjectEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:WmiLight.WmiObjectEnumerator"/> class.
            </summary>
            <param name="enumerator">The the native enumerator.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="enumerator"/> is null.</exception>
        </member>
        <member name="P:WmiLight.WmiObjectEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="P:WmiLight.WmiObjectEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="M:WmiLight.WmiObjectEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="M:WmiLight.WmiObjectEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="M:WmiLight.WmiObjectEnumerator.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:WmiLight.WmiObjectEnumerator"/>.
            </summary>
        </member>
        <member name="T:WmiLight.WmiObjectGenus">
            <summary>
            Enumeration that is used to distinguish <see cref="T:WmiLight.WmiObject"/>s between classes and instances. 
            </summary>
        </member>
        <member name="F:WmiLight.WmiObjectGenus.Class">
            <summary>
            Indicates that the <see cref="T:WmiLight.WmiObject"/> is an class. 
            </summary>
        </member>
        <member name="F:WmiLight.WmiObjectGenus.Instance">
            <summary>
            Indicates that the <see cref="T:WmiLight.WmiObject"/> is an instance or an event. 
            </summary>
        </member>
        <member name="T:WmiLight.WmiQuery">
            <summary>
            A object to requests wmi.
            </summary>
        </member>
        <member name="F:WmiLight.WmiQuery.wql">
            <summary>
            The WQL.
            </summary>
        </member>
        <member name="F:WmiLight.WmiQuery.connection">
            <summary>
            The <see cref="T:WmiLight.WmiConnection"/> to execute the query.
            </summary>
        </member>
        <member name="M:WmiLight.WmiQuery.#ctor(WmiLight.WmiConnection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WmiLight.WmiQuery"/> class.
            </summary>
            <param name="connection">The wmi connection who should be used.</param>
            <param name="wql">
            The string representation of a WMI Query Language (WQL) .
            <para />
            Example: SELECT * FROM Win32_LogicalDisk WHERE FreeSpace &lt; 2097152
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="connection"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="wql"/> is null.</exception>
        </member>
        <member name="M:WmiLight.WmiQuery.ToString">
            <summary>
            Returns the representation as WQL.
            </summary>
            <returns>The representation as WQL.</returns>
        </member>
        <member name="M:WmiLight.WmiQuery.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:WmiLight.WmiQuery.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A IEnumerator that can be used to iterate through the collection.</returns>
        </member>
    </members>
</doc>
